// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/model.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fmodel_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fmodel_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto 

namespace protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto
namespace tensorflow {
namespace data {
namespace model {
namespace proto {
class Model;
class ModelDefaultTypeInternal;
extern ModelDefaultTypeInternal _Model_default_instance_;
class Node;
class NodeDefaultTypeInternal;
extern NodeDefaultTypeInternal _Node_default_instance_;
class Node_MetadataEntry_DoNotUse;
class Node_MetadataEntry_DoNotUseDefaultTypeInternal;
extern Node_MetadataEntry_DoNotUseDefaultTypeInternal _Node_MetadataEntry_DoNotUse_default_instance_;
}  // namespace proto
}  // namespace model
}  // namespace data
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::data::model::proto::Model* Arena::CreateMaybeMessage<::tensorflow::data::model::proto::Model>(Arena*);
template<> ::tensorflow::data::model::proto::Node* Arena::CreateMaybeMessage<::tensorflow::data::model::proto::Node>(Arena*);
template<> ::tensorflow::data::model::proto::Node_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage<::tensorflow::data::model::proto::Node_MetadataEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {
namespace data {
namespace model {
namespace proto {

// ===================================================================

class Model : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.data.model.proto.Model) */ {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(Model* other);
  void Swap(Model* other);
  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Model* New() const final {
    return CreateMaybeMessage<Model>(NULL);
  }

  Model* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Model>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model* other);
  protected:
  explicit Model(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tensorflow.data.model.proto.Node node = 2;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 2;
  ::tensorflow::data::model::proto::Node* mutable_node(int index);
  ::google::protobuf::RepeatedPtrField< ::tensorflow::data::model::proto::Node >*
      mutable_node();
  const ::tensorflow::data::model::proto::Node& node(int index) const;
  ::tensorflow::data::model::proto::Node* add_node();
  const ::google::protobuf::RepeatedPtrField< ::tensorflow::data::model::proto::Node >&
      node() const;

  // int64 id_counter = 1;
  void clear_id_counter();
  static const int kIdCounterFieldNumber = 1;
  ::google::protobuf::int64 id_counter() const;
  void set_id_counter(::google::protobuf::int64 value);

  // int64 output = 3;
  void clear_output();
  static const int kOutputFieldNumber = 3;
  ::google::protobuf::int64 output() const;
  void set_output(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.data.model.proto.Model)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::tensorflow::data::model::proto::Node > node_;
  ::google::protobuf::int64 id_counter_;
  ::google::protobuf::int64 output_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Node_MetadataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Node_MetadataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Node_MetadataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::int32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    0 > SuperType;
  Node_MetadataEntry_DoNotUse();
  Node_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Node_MetadataEntry_DoNotUse& other);
  static const Node_MetadataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Node_MetadataEntry_DoNotUse*>(&_Node_MetadataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Node : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.data.model.proto.Node) */ {
 public:
  Node();
  virtual ~Node();

  Node(const Node& from);

  inline Node& operator=(const Node& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Node(Node&& from) noexcept
    : Node() {
    *this = ::std::move(from);
  }

  inline Node& operator=(Node&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const Node& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Node* internal_default_instance() {
    return reinterpret_cast<const Node*>(
               &_Node_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void UnsafeArenaSwap(Node* other);
  void Swap(Node* other);
  friend void swap(Node& a, Node& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Node* New() const final {
    return CreateMaybeMessage<Node>(NULL);
  }

  Node* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Node>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Node& from);
  void MergeFrom(const Node& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Node* other);
  protected:
  explicit Node(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated int64 input = 3;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 3;
  ::google::protobuf::int64 input(int index) const;
  void set_input(int index, ::google::protobuf::int64 value);
  void add_input(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      input() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_input();

  // map<string, int32> metadata = 7;
  int metadata_size() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 7;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
      metadata() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
      mutable_metadata();

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_name();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      ::std::string* name);

  // int64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int64 id() const;
  void set_id(::google::protobuf::int64 value);

  // int64 output = 4;
  void clear_output();
  static const int kOutputFieldNumber = 4;
  ::google::protobuf::int64 output() const;
  void set_output(::google::protobuf::int64 value);

  // int64 num_elements = 5;
  void clear_num_elements();
  static const int kNumElementsFieldNumber = 5;
  ::google::protobuf::int64 num_elements() const;
  void set_num_elements(::google::protobuf::int64 value);

  // int64 processing_time = 6;
  void clear_processing_time();
  static const int kProcessingTimeFieldNumber = 6;
  ::google::protobuf::int64 processing_time() const;
  void set_processing_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tensorflow.data.model.proto.Node)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > input_;
  mutable int _input_cached_byte_size_;
  ::google::protobuf::internal::MapField<
      Node_MetadataEntry_DoNotUse,
      ::std::string, ::google::protobuf::int32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      0 > metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 id_;
  ::google::protobuf::int64 output_;
  ::google::protobuf::int64 num_elements_;
  ::google::protobuf::int64 processing_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fframework_2fmodel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Model

// int64 id_counter = 1;
inline void Model::clear_id_counter() {
  id_counter_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Model::id_counter() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Model.id_counter)
  return id_counter_;
}
inline void Model::set_id_counter(::google::protobuf::int64 value) {
  
  id_counter_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Model.id_counter)
}

// repeated .tensorflow.data.model.proto.Node node = 2;
inline int Model::node_size() const {
  return node_.size();
}
inline void Model::clear_node() {
  node_.Clear();
}
inline ::tensorflow::data::model::proto::Node* Model::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.data.model.proto.Model.node)
  return node_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::tensorflow::data::model::proto::Node >*
Model::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.model.proto.Model.node)
  return &node_;
}
inline const ::tensorflow::data::model::proto::Node& Model::node(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Model.node)
  return node_.Get(index);
}
inline ::tensorflow::data::model::proto::Node* Model::add_node() {
  // @@protoc_insertion_point(field_add:tensorflow.data.model.proto.Model.node)
  return node_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::tensorflow::data::model::proto::Node >&
Model::node() const {
  // @@protoc_insertion_point(field_list:tensorflow.data.model.proto.Model.node)
  return node_;
}

// int64 output = 3;
inline void Model::clear_output() {
  output_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Model::output() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Model.output)
  return output_;
}
inline void Model::set_output(::google::protobuf::int64 value) {
  
  output_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Model.output)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Node

// int64 id = 1;
inline void Node::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Node::id() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Node.id)
  return id_;
}
inline void Node::set_id(::google::protobuf::int64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Node.id)
}

// string name = 2;
inline void Node::clear_name() {
  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& Node::name() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Node.name)
  return name_.Get();
}
inline void Node::set_name(const ::std::string& value) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Node.name)
}
#if LANG_CXX11
inline void Node::set_name(::std::string&& value) {
  
  name_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.data.model.proto.Node.name)
}
#endif
inline void Node::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.data.model.proto.Node.name)
}
inline void Node::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.data.model.proto.Node.name)
}
inline ::std::string* Node::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.data.model.proto.Node.name)
  return name_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* Node::release_name() {
  // @@protoc_insertion_point(field_release:tensorflow.data.model.proto.Node.name)
  
  return name_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void Node::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.data.model.proto.Node.name)
}
inline ::std::string* Node::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.data.model.proto.Node.name)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return name_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void Node::unsafe_arena_set_allocated_name(
    ::std::string* name) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (name != NULL) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      name, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.data.model.proto.Node.name)
}

// repeated int64 input = 3;
inline int Node::input_size() const {
  return input_.size();
}
inline void Node::clear_input() {
  input_.Clear();
}
inline ::google::protobuf::int64 Node::input(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Node.input)
  return input_.Get(index);
}
inline void Node::set_input(int index, ::google::protobuf::int64 value) {
  input_.Set(index, value);
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Node.input)
}
inline void Node::add_input(::google::protobuf::int64 value) {
  input_.Add(value);
  // @@protoc_insertion_point(field_add:tensorflow.data.model.proto.Node.input)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Node::input() const {
  // @@protoc_insertion_point(field_list:tensorflow.data.model.proto.Node.input)
  return input_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Node::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.data.model.proto.Node.input)
  return &input_;
}

// int64 output = 4;
inline void Node::clear_output() {
  output_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Node::output() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Node.output)
  return output_;
}
inline void Node::set_output(::google::protobuf::int64 value) {
  
  output_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Node.output)
}

// int64 num_elements = 5;
inline void Node::clear_num_elements() {
  num_elements_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Node::num_elements() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Node.num_elements)
  return num_elements_;
}
inline void Node::set_num_elements(::google::protobuf::int64 value) {
  
  num_elements_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Node.num_elements)
}

// int64 processing_time = 6;
inline void Node::clear_processing_time() {
  processing_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Node::processing_time() const {
  // @@protoc_insertion_point(field_get:tensorflow.data.model.proto.Node.processing_time)
  return processing_time_;
}
inline void Node::set_processing_time(::google::protobuf::int64 value) {
  
  processing_time_ = value;
  // @@protoc_insertion_point(field_set:tensorflow.data.model.proto.Node.processing_time)
}

// map<string, int32> metadata = 7;
inline int Node::metadata_size() const {
  return metadata_.size();
}
inline void Node::clear_metadata() {
  metadata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >&
Node::metadata() const {
  // @@protoc_insertion_point(field_map:tensorflow.data.model.proto.Node.metadata)
  return metadata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int32 >*
Node::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_map:tensorflow.data.model.proto.Node.metadata)
  return metadata_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace model
}  // namespace data
}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fmodel_2eproto
