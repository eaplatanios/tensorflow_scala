// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/iterator.proto

#ifndef PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fiterator_2eproto
#define PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fiterator_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto 

namespace protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto
namespace tensorflow {
class IteratorStateMetadata;
class IteratorStateMetadataDefaultTypeInternal;
extern IteratorStateMetadataDefaultTypeInternal _IteratorStateMetadata_default_instance_;
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> ::tensorflow::IteratorStateMetadata* Arena::CreateMaybeMessage<::tensorflow::IteratorStateMetadata>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace tensorflow {

// ===================================================================

class IteratorStateMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tensorflow.IteratorStateMetadata) */ {
 public:
  IteratorStateMetadata();
  virtual ~IteratorStateMetadata();

  IteratorStateMetadata(const IteratorStateMetadata& from);

  inline IteratorStateMetadata& operator=(const IteratorStateMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IteratorStateMetadata(IteratorStateMetadata&& from) noexcept
    : IteratorStateMetadata() {
    *this = ::std::move(from);
  }

  inline IteratorStateMetadata& operator=(IteratorStateMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline ::google::protobuf::Arena* GetArena() const final {
    return GetArenaNoVirtual();
  }
  inline void* GetMaybeArenaPointer() const final {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const IteratorStateMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IteratorStateMetadata* internal_default_instance() {
    return reinterpret_cast<const IteratorStateMetadata*>(
               &_IteratorStateMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void UnsafeArenaSwap(IteratorStateMetadata* other);
  void Swap(IteratorStateMetadata* other);
  friend void swap(IteratorStateMetadata& a, IteratorStateMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IteratorStateMetadata* New() const final {
    return CreateMaybeMessage<IteratorStateMetadata>(NULL);
  }

  IteratorStateMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<IteratorStateMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const IteratorStateMetadata& from);
  void MergeFrom(const IteratorStateMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IteratorStateMetadata* other);
  protected:
  explicit IteratorStateMetadata(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::std::string& keys(int index) const;
  ::std::string* mutable_keys(int index);
  void set_keys(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_keys(int index, ::std::string&& value);
  #endif
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, size_t size);
  ::std::string* add_keys();
  void add_keys(const ::std::string& value);
  #if LANG_CXX11
  void add_keys(::std::string&& value);
  #endif
  void add_keys(const char* value);
  void add_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_keys();

  // string version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  ::std::string* unsafe_arena_release_version();
  PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_version(
      ::std::string* version);

  // @@protoc_insertion_point(class_scope:tensorflow.IteratorStateMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::google::protobuf::RepeatedPtrField< ::std::string> keys_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tensorflow_2fcore_2fframework_2fiterator_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IteratorStateMetadata

// string version = 1;
inline void IteratorStateMetadata::clear_version() {
  version_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline const ::std::string& IteratorStateMetadata::version() const {
  // @@protoc_insertion_point(field_get:tensorflow.IteratorStateMetadata.version)
  return version_.Get();
}
inline void IteratorStateMetadata::set_version(const ::std::string& value) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set:tensorflow.IteratorStateMetadata.version)
}
#if LANG_CXX11
inline void IteratorStateMetadata::set_version(::std::string&& value) {
  
  version_.Set(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_rvalue:tensorflow.IteratorStateMetadata.version)
}
#endif
inline void IteratorStateMetadata::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_char:tensorflow.IteratorStateMetadata.version)
}
inline void IteratorStateMetadata::set_version(const char* value,
    size_t size) {
  
  version_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_pointer:tensorflow.IteratorStateMetadata.version)
}
inline ::std::string* IteratorStateMetadata::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:tensorflow.IteratorStateMetadata.version)
  return version_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline ::std::string* IteratorStateMetadata::release_version() {
  // @@protoc_insertion_point(field_release:tensorflow.IteratorStateMetadata.version)
  
  return version_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
}
inline void IteratorStateMetadata::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version,
      GetArenaNoVirtual());
  // @@protoc_insertion_point(field_set_allocated:tensorflow.IteratorStateMetadata.version)
}
inline ::std::string* IteratorStateMetadata::unsafe_arena_release_version() {
  // @@protoc_insertion_point(field_unsafe_arena_release:tensorflow.IteratorStateMetadata.version)
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  
  return version_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      GetArenaNoVirtual());
}
inline void IteratorStateMetadata::unsafe_arena_set_allocated_version(
    ::std::string* version) {
  GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
  if (version != NULL) {
    
  } else {
    
  }
  version_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      version, GetArenaNoVirtual());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tensorflow.IteratorStateMetadata.version)
}

// repeated string keys = 2;
inline int IteratorStateMetadata::keys_size() const {
  return keys_.size();
}
inline void IteratorStateMetadata::clear_keys() {
  keys_.Clear();
}
inline const ::std::string& IteratorStateMetadata::keys(int index) const {
  // @@protoc_insertion_point(field_get:tensorflow.IteratorStateMetadata.keys)
  return keys_.Get(index);
}
inline ::std::string* IteratorStateMetadata::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:tensorflow.IteratorStateMetadata.keys)
  return keys_.Mutable(index);
}
inline void IteratorStateMetadata::set_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:tensorflow.IteratorStateMetadata.keys)
  keys_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void IteratorStateMetadata::set_keys(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:tensorflow.IteratorStateMetadata.keys)
  keys_.Mutable(index)->assign(std::move(value));
}
#endif
inline void IteratorStateMetadata::set_keys(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:tensorflow.IteratorStateMetadata.keys)
}
inline void IteratorStateMetadata::set_keys(int index, const char* value, size_t size) {
  keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:tensorflow.IteratorStateMetadata.keys)
}
inline ::std::string* IteratorStateMetadata::add_keys() {
  // @@protoc_insertion_point(field_add_mutable:tensorflow.IteratorStateMetadata.keys)
  return keys_.Add();
}
inline void IteratorStateMetadata::add_keys(const ::std::string& value) {
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:tensorflow.IteratorStateMetadata.keys)
}
#if LANG_CXX11
inline void IteratorStateMetadata::add_keys(::std::string&& value) {
  keys_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:tensorflow.IteratorStateMetadata.keys)
}
#endif
inline void IteratorStateMetadata::add_keys(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:tensorflow.IteratorStateMetadata.keys)
}
inline void IteratorStateMetadata::add_keys(const char* value, size_t size) {
  keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:tensorflow.IteratorStateMetadata.keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
IteratorStateMetadata::keys() const {
  // @@protoc_insertion_point(field_list:tensorflow.IteratorStateMetadata.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
IteratorStateMetadata::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:tensorflow.IteratorStateMetadata.keys)
  return &keys_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace tensorflow

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_tensorflow_2fcore_2fframework_2fiterator_2eproto
