/*
 * Generated by dtrace(1M).
 */

#ifndef	_PYDTRACE_PROBES_H
#define	_PYDTRACE_PROBES_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define PyDTrace_STABILITY "___dtrace_stability$python$v1$5_5_5_5_5_5_5_5_5_5_5_5_5_5_5"

#define PyDTrace_TYPEDEFS "___dtrace_typedefs$python$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	PyDTrace_FUNCTION_ENTRY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$function__entry$v1$63686172202a$63686172202a$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_FUNCTION_ENTRY_ENABLED() \
	({ int _r = __dtrace_isenabled$python$function__entry$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_FUNCTION_RETURN(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$function__return$v1$63686172202a$63686172202a$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_FUNCTION_RETURN_ENABLED() \
	({ int _r = __dtrace_isenabled$python$function__return$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_GC_DONE(arg0) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$gc__done$v1$6c6f6e67(arg0); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_GC_DONE_ENABLED() \
	({ int _r = __dtrace_isenabled$python$gc__done$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_GC_START(arg0) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$gc__start$v1$696e74(arg0); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_GC_START_ENABLED() \
	({ int _r = __dtrace_isenabled$python$gc__start$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_IMPORT_FIND_LOAD_DONE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$import__find__load__done$v1$63686172202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_IMPORT_FIND_LOAD_DONE_ENABLED() \
	({ int _r = __dtrace_isenabled$python$import__find__load__done$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_IMPORT_FIND_LOAD_START(arg0) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$import__find__load__start$v1$63686172202a(arg0); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_IMPORT_FIND_LOAD_START_ENABLED() \
	({ int _r = __dtrace_isenabled$python$import__find__load__start$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_INSTANCE_DELETE_DONE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$instance__delete__done$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_INSTANCE_DELETE_DONE_ENABLED() \
	({ int _r = __dtrace_isenabled$python$instance__delete__done$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_INSTANCE_DELETE_START(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$instance__delete__start$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_INSTANCE_DELETE_START_ENABLED() \
	({ int _r = __dtrace_isenabled$python$instance__delete__start$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_INSTANCE_NEW_DONE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$instance__new__done$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_INSTANCE_NEW_DONE_ENABLED() \
	({ int _r = __dtrace_isenabled$python$instance__new__done$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_INSTANCE_NEW_START(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$instance__new__start$v1$63686172202a$63686172202a(arg0, arg1); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_INSTANCE_NEW_START_ENABLED() \
	({ int _r = __dtrace_isenabled$python$instance__new__start$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PyDTrace_LINE(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PyDTrace_TYPEDEFS); \
	__dtrace_probe$python$line$v1$63686172202a$63686172202a$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PyDTrace_STABILITY); \
} while (0)
#define	PyDTrace_LINE_ENABLED() \
	({ int _r = __dtrace_isenabled$python$line$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$python$function__entry$v1$63686172202a$63686172202a$696e74(const char *, const char *, int);
extern int __dtrace_isenabled$python$function__entry$v1(void);
extern void __dtrace_probe$python$function__return$v1$63686172202a$63686172202a$696e74(const char *, const char *, int);
extern int __dtrace_isenabled$python$function__return$v1(void);
extern void __dtrace_probe$python$gc__done$v1$6c6f6e67(long);
extern int __dtrace_isenabled$python$gc__done$v1(void);
extern void __dtrace_probe$python$gc__start$v1$696e74(int);
extern int __dtrace_isenabled$python$gc__start$v1(void);
extern void __dtrace_probe$python$import__find__load__done$v1$63686172202a$696e74(const char *, int);
extern int __dtrace_isenabled$python$import__find__load__done$v1(void);
extern void __dtrace_probe$python$import__find__load__start$v1$63686172202a(const char *);
extern int __dtrace_isenabled$python$import__find__load__start$v1(void);
extern void __dtrace_probe$python$instance__delete__done$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$python$instance__delete__done$v1(void);
extern void __dtrace_probe$python$instance__delete__start$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$python$instance__delete__start$v1(void);
extern void __dtrace_probe$python$instance__new__done$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$python$instance__new__done$v1(void);
extern void __dtrace_probe$python$instance__new__start$v1$63686172202a$63686172202a(const char *, const char *);
extern int __dtrace_isenabled$python$instance__new__start$v1(void);
extern void __dtrace_probe$python$line$v1$63686172202a$63686172202a$696e74(const char *, const char *, int);
extern int __dtrace_isenabled$python$line$v1(void);

#else

#define	PyDTrace_FUNCTION_ENTRY(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PyDTrace_FUNCTION_ENTRY_ENABLED() (0)
#define	PyDTrace_FUNCTION_RETURN(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PyDTrace_FUNCTION_RETURN_ENABLED() (0)
#define	PyDTrace_GC_DONE(arg0) \
do { \
	} while (0)
#define	PyDTrace_GC_DONE_ENABLED() (0)
#define	PyDTrace_GC_START(arg0) \
do { \
	} while (0)
#define	PyDTrace_GC_START_ENABLED() (0)
#define	PyDTrace_IMPORT_FIND_LOAD_DONE(arg0, arg1) \
do { \
	} while (0)
#define	PyDTrace_IMPORT_FIND_LOAD_DONE_ENABLED() (0)
#define	PyDTrace_IMPORT_FIND_LOAD_START(arg0) \
do { \
	} while (0)
#define	PyDTrace_IMPORT_FIND_LOAD_START_ENABLED() (0)
#define	PyDTrace_INSTANCE_DELETE_DONE(arg0, arg1) \
do { \
	} while (0)
#define	PyDTrace_INSTANCE_DELETE_DONE_ENABLED() (0)
#define	PyDTrace_INSTANCE_DELETE_START(arg0, arg1) \
do { \
	} while (0)
#define	PyDTrace_INSTANCE_DELETE_START_ENABLED() (0)
#define	PyDTrace_INSTANCE_NEW_DONE(arg0, arg1) \
do { \
	} while (0)
#define	PyDTrace_INSTANCE_NEW_DONE_ENABLED() (0)
#define	PyDTrace_INSTANCE_NEW_START(arg0, arg1) \
do { \
	} while (0)
#define	PyDTrace_INSTANCE_NEW_START_ENABLED() (0)
#define	PyDTrace_LINE(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PyDTrace_LINE_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _PYDTRACE_PROBES_H */
