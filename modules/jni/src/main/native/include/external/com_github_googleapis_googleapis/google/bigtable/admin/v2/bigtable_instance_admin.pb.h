// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

#ifndef PROTOBUF_INCLUDED_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto
#define PROTOBUF_INCLUDED_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/api/annotations.pb.h"
#include "google/bigtable/admin/v2/instance.pb.h"
#include "google/iam/v1/iam_policy.pb.h"
#include "google/iam/v1/policy.pb.h"
#include "google/longrunning/operations.pb.h"
#include <google/protobuf/empty.pb.h>
#include <google/protobuf/field_mask.pb.h>
#include <google/protobuf/timestamp.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto 

namespace protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[23];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {
class CreateAppProfileRequest;
class CreateAppProfileRequestDefaultTypeInternal;
extern CreateAppProfileRequestDefaultTypeInternal _CreateAppProfileRequest_default_instance_;
class CreateClusterMetadata;
class CreateClusterMetadataDefaultTypeInternal;
extern CreateClusterMetadataDefaultTypeInternal _CreateClusterMetadata_default_instance_;
class CreateClusterRequest;
class CreateClusterRequestDefaultTypeInternal;
extern CreateClusterRequestDefaultTypeInternal _CreateClusterRequest_default_instance_;
class CreateInstanceMetadata;
class CreateInstanceMetadataDefaultTypeInternal;
extern CreateInstanceMetadataDefaultTypeInternal _CreateInstanceMetadata_default_instance_;
class CreateInstanceRequest;
class CreateInstanceRequestDefaultTypeInternal;
extern CreateInstanceRequestDefaultTypeInternal _CreateInstanceRequest_default_instance_;
class CreateInstanceRequest_ClustersEntry_DoNotUse;
class CreateInstanceRequest_ClustersEntry_DoNotUseDefaultTypeInternal;
extern CreateInstanceRequest_ClustersEntry_DoNotUseDefaultTypeInternal _CreateInstanceRequest_ClustersEntry_DoNotUse_default_instance_;
class DeleteAppProfileRequest;
class DeleteAppProfileRequestDefaultTypeInternal;
extern DeleteAppProfileRequestDefaultTypeInternal _DeleteAppProfileRequest_default_instance_;
class DeleteClusterRequest;
class DeleteClusterRequestDefaultTypeInternal;
extern DeleteClusterRequestDefaultTypeInternal _DeleteClusterRequest_default_instance_;
class DeleteInstanceRequest;
class DeleteInstanceRequestDefaultTypeInternal;
extern DeleteInstanceRequestDefaultTypeInternal _DeleteInstanceRequest_default_instance_;
class GetAppProfileRequest;
class GetAppProfileRequestDefaultTypeInternal;
extern GetAppProfileRequestDefaultTypeInternal _GetAppProfileRequest_default_instance_;
class GetClusterRequest;
class GetClusterRequestDefaultTypeInternal;
extern GetClusterRequestDefaultTypeInternal _GetClusterRequest_default_instance_;
class GetInstanceRequest;
class GetInstanceRequestDefaultTypeInternal;
extern GetInstanceRequestDefaultTypeInternal _GetInstanceRequest_default_instance_;
class ListAppProfilesRequest;
class ListAppProfilesRequestDefaultTypeInternal;
extern ListAppProfilesRequestDefaultTypeInternal _ListAppProfilesRequest_default_instance_;
class ListAppProfilesResponse;
class ListAppProfilesResponseDefaultTypeInternal;
extern ListAppProfilesResponseDefaultTypeInternal _ListAppProfilesResponse_default_instance_;
class ListClustersRequest;
class ListClustersRequestDefaultTypeInternal;
extern ListClustersRequestDefaultTypeInternal _ListClustersRequest_default_instance_;
class ListClustersResponse;
class ListClustersResponseDefaultTypeInternal;
extern ListClustersResponseDefaultTypeInternal _ListClustersResponse_default_instance_;
class ListInstancesRequest;
class ListInstancesRequestDefaultTypeInternal;
extern ListInstancesRequestDefaultTypeInternal _ListInstancesRequest_default_instance_;
class ListInstancesResponse;
class ListInstancesResponseDefaultTypeInternal;
extern ListInstancesResponseDefaultTypeInternal _ListInstancesResponse_default_instance_;
class PartialUpdateInstanceRequest;
class PartialUpdateInstanceRequestDefaultTypeInternal;
extern PartialUpdateInstanceRequestDefaultTypeInternal _PartialUpdateInstanceRequest_default_instance_;
class UpdateAppProfileMetadata;
class UpdateAppProfileMetadataDefaultTypeInternal;
extern UpdateAppProfileMetadataDefaultTypeInternal _UpdateAppProfileMetadata_default_instance_;
class UpdateAppProfileRequest;
class UpdateAppProfileRequestDefaultTypeInternal;
extern UpdateAppProfileRequestDefaultTypeInternal _UpdateAppProfileRequest_default_instance_;
class UpdateClusterMetadata;
class UpdateClusterMetadataDefaultTypeInternal;
extern UpdateClusterMetadataDefaultTypeInternal _UpdateClusterMetadata_default_instance_;
class UpdateInstanceMetadata;
class UpdateInstanceMetadataDefaultTypeInternal;
extern UpdateInstanceMetadataDefaultTypeInternal _UpdateInstanceMetadata_default_instance_;
}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google
namespace google {
namespace protobuf {
template<> ::google::bigtable::admin::v2::CreateAppProfileRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::CreateAppProfileRequest>(Arena*);
template<> ::google::bigtable::admin::v2::CreateClusterMetadata* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::CreateClusterMetadata>(Arena*);
template<> ::google::bigtable::admin::v2::CreateClusterRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::CreateClusterRequest>(Arena*);
template<> ::google::bigtable::admin::v2::CreateInstanceMetadata* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::CreateInstanceMetadata>(Arena*);
template<> ::google::bigtable::admin::v2::CreateInstanceRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::CreateInstanceRequest>(Arena*);
template<> ::google::bigtable::admin::v2::CreateInstanceRequest_ClustersEntry_DoNotUse* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::CreateInstanceRequest_ClustersEntry_DoNotUse>(Arena*);
template<> ::google::bigtable::admin::v2::DeleteAppProfileRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::DeleteAppProfileRequest>(Arena*);
template<> ::google::bigtable::admin::v2::DeleteClusterRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::DeleteClusterRequest>(Arena*);
template<> ::google::bigtable::admin::v2::DeleteInstanceRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::DeleteInstanceRequest>(Arena*);
template<> ::google::bigtable::admin::v2::GetAppProfileRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::GetAppProfileRequest>(Arena*);
template<> ::google::bigtable::admin::v2::GetClusterRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::GetClusterRequest>(Arena*);
template<> ::google::bigtable::admin::v2::GetInstanceRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::GetInstanceRequest>(Arena*);
template<> ::google::bigtable::admin::v2::ListAppProfilesRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::ListAppProfilesRequest>(Arena*);
template<> ::google::bigtable::admin::v2::ListAppProfilesResponse* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::ListAppProfilesResponse>(Arena*);
template<> ::google::bigtable::admin::v2::ListClustersRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::ListClustersRequest>(Arena*);
template<> ::google::bigtable::admin::v2::ListClustersResponse* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::ListClustersResponse>(Arena*);
template<> ::google::bigtable::admin::v2::ListInstancesRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::ListInstancesRequest>(Arena*);
template<> ::google::bigtable::admin::v2::ListInstancesResponse* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::ListInstancesResponse>(Arena*);
template<> ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::PartialUpdateInstanceRequest>(Arena*);
template<> ::google::bigtable::admin::v2::UpdateAppProfileMetadata* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::UpdateAppProfileMetadata>(Arena*);
template<> ::google::bigtable::admin::v2::UpdateAppProfileRequest* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::UpdateAppProfileRequest>(Arena*);
template<> ::google::bigtable::admin::v2::UpdateClusterMetadata* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::UpdateClusterMetadata>(Arena*);
template<> ::google::bigtable::admin::v2::UpdateInstanceMetadata* Arena::CreateMaybeMessage<::google::bigtable::admin::v2::UpdateInstanceMetadata>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace google {
namespace bigtable {
namespace admin {
namespace v2 {

// ===================================================================

class CreateInstanceRequest_ClustersEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CreateInstanceRequest_ClustersEntry_DoNotUse, 
    ::std::string, ::google::bigtable::admin::v2::Cluster,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<CreateInstanceRequest_ClustersEntry_DoNotUse, 
    ::std::string, ::google::bigtable::admin::v2::Cluster,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  CreateInstanceRequest_ClustersEntry_DoNotUse();
  CreateInstanceRequest_ClustersEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CreateInstanceRequest_ClustersEntry_DoNotUse& other);
  static const CreateInstanceRequest_ClustersEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CreateInstanceRequest_ClustersEntry_DoNotUse*>(&_CreateInstanceRequest_ClustersEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class CreateInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateInstanceRequest) */ {
 public:
  CreateInstanceRequest();
  virtual ~CreateInstanceRequest();

  CreateInstanceRequest(const CreateInstanceRequest& from);

  inline CreateInstanceRequest& operator=(const CreateInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateInstanceRequest(CreateInstanceRequest&& from) noexcept
    : CreateInstanceRequest() {
    *this = ::std::move(from);
  }

  inline CreateInstanceRequest& operator=(CreateInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceRequest*>(
               &_CreateInstanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateInstanceRequest* other);
  friend void swap(CreateInstanceRequest& a, CreateInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateInstanceRequest* New() const final {
    return CreateMaybeMessage<CreateInstanceRequest>(NULL);
  }

  CreateInstanceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateInstanceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateInstanceRequest& from);
  void MergeFrom(const CreateInstanceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
  int clusters_size() const;
  void clear_clusters();
  static const int kClustersFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >&
      clusters() const;
  ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >*
      mutable_clusters();

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string instance_id = 2;
  void clear_instance_id();
  static const int kInstanceIdFieldNumber = 2;
  const ::std::string& instance_id() const;
  void set_instance_id(const ::std::string& value);
  #if LANG_CXX11
  void set_instance_id(::std::string&& value);
  #endif
  void set_instance_id(const char* value);
  void set_instance_id(const char* value, size_t size);
  ::std::string* mutable_instance_id();
  ::std::string* release_instance_id();
  void set_allocated_instance_id(::std::string* instance_id);

  // .google.bigtable.admin.v2.Instance instance = 3;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 3;
  private:
  const ::google::bigtable::admin::v2::Instance& _internal_instance() const;
  public:
  const ::google::bigtable::admin::v2::Instance& instance() const;
  ::google::bigtable::admin::v2::Instance* release_instance();
  ::google::bigtable::admin::v2::Instance* mutable_instance();
  void set_allocated_instance(::google::bigtable::admin::v2::Instance* instance);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      CreateInstanceRequest_ClustersEntry_DoNotUse,
      ::std::string, ::google::bigtable::admin::v2::Cluster,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > clusters_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr instance_id_;
  ::google::bigtable::admin::v2::Instance* instance_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.GetInstanceRequest) */ {
 public:
  GetInstanceRequest();
  virtual ~GetInstanceRequest();

  GetInstanceRequest(const GetInstanceRequest& from);

  inline GetInstanceRequest& operator=(const GetInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetInstanceRequest(GetInstanceRequest&& from) noexcept
    : GetInstanceRequest() {
    *this = ::std::move(from);
  }

  inline GetInstanceRequest& operator=(GetInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const GetInstanceRequest*>(
               &_GetInstanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(GetInstanceRequest* other);
  friend void swap(GetInstanceRequest& a, GetInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetInstanceRequest* New() const final {
    return CreateMaybeMessage<GetInstanceRequest>(NULL);
  }

  GetInstanceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetInstanceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetInstanceRequest& from);
  void MergeFrom(const GetInstanceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GetInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInstancesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListInstancesRequest) */ {
 public:
  ListInstancesRequest();
  virtual ~ListInstancesRequest();

  ListInstancesRequest(const ListInstancesRequest& from);

  inline ListInstancesRequest& operator=(const ListInstancesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInstancesRequest(ListInstancesRequest&& from) noexcept
    : ListInstancesRequest() {
    *this = ::std::move(from);
  }

  inline ListInstancesRequest& operator=(ListInstancesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstancesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInstancesRequest* internal_default_instance() {
    return reinterpret_cast<const ListInstancesRequest*>(
               &_ListInstancesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(ListInstancesRequest* other);
  friend void swap(ListInstancesRequest& a, ListInstancesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInstancesRequest* New() const final {
    return CreateMaybeMessage<ListInstancesRequest>(NULL);
  }

  ListInstancesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInstancesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInstancesRequest& from);
  void MergeFrom(const ListInstancesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInstancesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListInstancesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListInstancesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListInstancesResponse) */ {
 public:
  ListInstancesResponse();
  virtual ~ListInstancesResponse();

  ListInstancesResponse(const ListInstancesResponse& from);

  inline ListInstancesResponse& operator=(const ListInstancesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListInstancesResponse(ListInstancesResponse&& from) noexcept
    : ListInstancesResponse() {
    *this = ::std::move(from);
  }

  inline ListInstancesResponse& operator=(ListInstancesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListInstancesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListInstancesResponse* internal_default_instance() {
    return reinterpret_cast<const ListInstancesResponse*>(
               &_ListInstancesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(ListInstancesResponse* other);
  friend void swap(ListInstancesResponse& a, ListInstancesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListInstancesResponse* New() const final {
    return CreateMaybeMessage<ListInstancesResponse>(NULL);
  }

  ListInstancesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListInstancesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListInstancesResponse& from);
  void MergeFrom(const ListInstancesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListInstancesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.bigtable.admin.v2.Instance instances = 1;
  int instances_size() const;
  void clear_instances();
  static const int kInstancesFieldNumber = 1;
  ::google::bigtable::admin::v2::Instance* mutable_instances(int index);
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance >*
      mutable_instances();
  const ::google::bigtable::admin::v2::Instance& instances(int index) const;
  ::google::bigtable::admin::v2::Instance* add_instances();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance >&
      instances() const;

  // repeated string failed_locations = 2;
  int failed_locations_size() const;
  void clear_failed_locations();
  static const int kFailedLocationsFieldNumber = 2;
  const ::std::string& failed_locations(int index) const;
  ::std::string* mutable_failed_locations(int index);
  void set_failed_locations(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_failed_locations(int index, ::std::string&& value);
  #endif
  void set_failed_locations(int index, const char* value);
  void set_failed_locations(int index, const char* value, size_t size);
  ::std::string* add_failed_locations();
  void add_failed_locations(const ::std::string& value);
  #if LANG_CXX11
  void add_failed_locations(::std::string&& value);
  #endif
  void add_failed_locations(const char* value);
  void add_failed_locations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& failed_locations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_failed_locations();

  // string next_page_token = 3;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 3;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListInstancesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance > instances_;
  ::google::protobuf::RepeatedPtrField< ::std::string> failed_locations_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PartialUpdateInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.PartialUpdateInstanceRequest) */ {
 public:
  PartialUpdateInstanceRequest();
  virtual ~PartialUpdateInstanceRequest();

  PartialUpdateInstanceRequest(const PartialUpdateInstanceRequest& from);

  inline PartialUpdateInstanceRequest& operator=(const PartialUpdateInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PartialUpdateInstanceRequest(PartialUpdateInstanceRequest&& from) noexcept
    : PartialUpdateInstanceRequest() {
    *this = ::std::move(from);
  }

  inline PartialUpdateInstanceRequest& operator=(PartialUpdateInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PartialUpdateInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PartialUpdateInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const PartialUpdateInstanceRequest*>(
               &_PartialUpdateInstanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PartialUpdateInstanceRequest* other);
  friend void swap(PartialUpdateInstanceRequest& a, PartialUpdateInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PartialUpdateInstanceRequest* New() const final {
    return CreateMaybeMessage<PartialUpdateInstanceRequest>(NULL);
  }

  PartialUpdateInstanceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PartialUpdateInstanceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PartialUpdateInstanceRequest& from);
  void MergeFrom(const PartialUpdateInstanceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PartialUpdateInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.v2.Instance instance = 1;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 1;
  private:
  const ::google::bigtable::admin::v2::Instance& _internal_instance() const;
  public:
  const ::google::bigtable::admin::v2::Instance& instance() const;
  ::google::bigtable::admin::v2::Instance* release_instance();
  ::google::bigtable::admin::v2::Instance* mutable_instance();
  void set_allocated_instance(::google::bigtable::admin::v2::Instance* instance);

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.PartialUpdateInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::v2::Instance* instance_;
  ::google::protobuf::FieldMask* update_mask_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteInstanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.DeleteInstanceRequest) */ {
 public:
  DeleteInstanceRequest();
  virtual ~DeleteInstanceRequest();

  DeleteInstanceRequest(const DeleteInstanceRequest& from);

  inline DeleteInstanceRequest& operator=(const DeleteInstanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteInstanceRequest(DeleteInstanceRequest&& from) noexcept
    : DeleteInstanceRequest() {
    *this = ::std::move(from);
  }

  inline DeleteInstanceRequest& operator=(DeleteInstanceRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteInstanceRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteInstanceRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteInstanceRequest*>(
               &_DeleteInstanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DeleteInstanceRequest* other);
  friend void swap(DeleteInstanceRequest& a, DeleteInstanceRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteInstanceRequest* New() const final {
    return CreateMaybeMessage<DeleteInstanceRequest>(NULL);
  }

  DeleteInstanceRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteInstanceRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteInstanceRequest& from);
  void MergeFrom(const DeleteInstanceRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteInstanceRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DeleteInstanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateClusterRequest) */ {
 public:
  CreateClusterRequest();
  virtual ~CreateClusterRequest();

  CreateClusterRequest(const CreateClusterRequest& from);

  inline CreateClusterRequest& operator=(const CreateClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateClusterRequest(CreateClusterRequest&& from) noexcept
    : CreateClusterRequest() {
    *this = ::std::move(from);
  }

  inline CreateClusterRequest& operator=(CreateClusterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateClusterRequest* internal_default_instance() {
    return reinterpret_cast<const CreateClusterRequest*>(
               &_CreateClusterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(CreateClusterRequest* other);
  friend void swap(CreateClusterRequest& a, CreateClusterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateClusterRequest* New() const final {
    return CreateMaybeMessage<CreateClusterRequest>(NULL);
  }

  CreateClusterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateClusterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateClusterRequest& from);
  void MergeFrom(const CreateClusterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .google.bigtable.admin.v2.Cluster cluster = 3;
  bool has_cluster() const;
  void clear_cluster();
  static const int kClusterFieldNumber = 3;
  private:
  const ::google::bigtable::admin::v2::Cluster& _internal_cluster() const;
  public:
  const ::google::bigtable::admin::v2::Cluster& cluster() const;
  ::google::bigtable::admin::v2::Cluster* release_cluster();
  ::google::bigtable::admin::v2::Cluster* mutable_cluster();
  void set_allocated_cluster(::google::bigtable::admin::v2::Cluster* cluster);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::bigtable::admin::v2::Cluster* cluster_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.GetClusterRequest) */ {
 public:
  GetClusterRequest();
  virtual ~GetClusterRequest();

  GetClusterRequest(const GetClusterRequest& from);

  inline GetClusterRequest& operator=(const GetClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetClusterRequest(GetClusterRequest&& from) noexcept
    : GetClusterRequest() {
    *this = ::std::move(from);
  }

  inline GetClusterRequest& operator=(GetClusterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetClusterRequest* internal_default_instance() {
    return reinterpret_cast<const GetClusterRequest*>(
               &_GetClusterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(GetClusterRequest* other);
  friend void swap(GetClusterRequest& a, GetClusterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetClusterRequest* New() const final {
    return CreateMaybeMessage<GetClusterRequest>(NULL);
  }

  GetClusterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetClusterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetClusterRequest& from);
  void MergeFrom(const GetClusterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GetClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListClustersRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListClustersRequest) */ {
 public:
  ListClustersRequest();
  virtual ~ListClustersRequest();

  ListClustersRequest(const ListClustersRequest& from);

  inline ListClustersRequest& operator=(const ListClustersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListClustersRequest(ListClustersRequest&& from) noexcept
    : ListClustersRequest() {
    *this = ::std::move(from);
  }

  inline ListClustersRequest& operator=(ListClustersRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListClustersRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListClustersRequest* internal_default_instance() {
    return reinterpret_cast<const ListClustersRequest*>(
               &_ListClustersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(ListClustersRequest* other);
  friend void swap(ListClustersRequest& a, ListClustersRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListClustersRequest* New() const final {
    return CreateMaybeMessage<ListClustersRequest>(NULL);
  }

  ListClustersRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListClustersRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListClustersRequest& from);
  void MergeFrom(const ListClustersRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListClustersRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListClustersRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListClustersResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListClustersResponse) */ {
 public:
  ListClustersResponse();
  virtual ~ListClustersResponse();

  ListClustersResponse(const ListClustersResponse& from);

  inline ListClustersResponse& operator=(const ListClustersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListClustersResponse(ListClustersResponse&& from) noexcept
    : ListClustersResponse() {
    *this = ::std::move(from);
  }

  inline ListClustersResponse& operator=(ListClustersResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListClustersResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListClustersResponse* internal_default_instance() {
    return reinterpret_cast<const ListClustersResponse*>(
               &_ListClustersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(ListClustersResponse* other);
  friend void swap(ListClustersResponse& a, ListClustersResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListClustersResponse* New() const final {
    return CreateMaybeMessage<ListClustersResponse>(NULL);
  }

  ListClustersResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListClustersResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListClustersResponse& from);
  void MergeFrom(const ListClustersResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListClustersResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.bigtable.admin.v2.Cluster clusters = 1;
  int clusters_size() const;
  void clear_clusters();
  static const int kClustersFieldNumber = 1;
  ::google::bigtable::admin::v2::Cluster* mutable_clusters(int index);
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster >*
      mutable_clusters();
  const ::google::bigtable::admin::v2::Cluster& clusters(int index) const;
  ::google::bigtable::admin::v2::Cluster* add_clusters();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster >&
      clusters() const;

  // repeated string failed_locations = 2;
  int failed_locations_size() const;
  void clear_failed_locations();
  static const int kFailedLocationsFieldNumber = 2;
  const ::std::string& failed_locations(int index) const;
  ::std::string* mutable_failed_locations(int index);
  void set_failed_locations(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_failed_locations(int index, ::std::string&& value);
  #endif
  void set_failed_locations(int index, const char* value);
  void set_failed_locations(int index, const char* value, size_t size);
  ::std::string* add_failed_locations();
  void add_failed_locations(const ::std::string& value);
  #if LANG_CXX11
  void add_failed_locations(::std::string&& value);
  #endif
  void add_failed_locations(const char* value);
  void add_failed_locations(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& failed_locations() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_failed_locations();

  // string next_page_token = 3;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 3;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListClustersResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster > clusters_;
  ::google::protobuf::RepeatedPtrField< ::std::string> failed_locations_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteClusterRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.DeleteClusterRequest) */ {
 public:
  DeleteClusterRequest();
  virtual ~DeleteClusterRequest();

  DeleteClusterRequest(const DeleteClusterRequest& from);

  inline DeleteClusterRequest& operator=(const DeleteClusterRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteClusterRequest(DeleteClusterRequest&& from) noexcept
    : DeleteClusterRequest() {
    *this = ::std::move(from);
  }

  inline DeleteClusterRequest& operator=(DeleteClusterRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteClusterRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteClusterRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteClusterRequest*>(
               &_DeleteClusterRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(DeleteClusterRequest* other);
  friend void swap(DeleteClusterRequest& a, DeleteClusterRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteClusterRequest* New() const final {
    return CreateMaybeMessage<DeleteClusterRequest>(NULL);
  }

  DeleteClusterRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteClusterRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteClusterRequest& from);
  void MergeFrom(const DeleteClusterRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteClusterRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DeleteClusterRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateInstanceMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateInstanceMetadata) */ {
 public:
  CreateInstanceMetadata();
  virtual ~CreateInstanceMetadata();

  CreateInstanceMetadata(const CreateInstanceMetadata& from);

  inline CreateInstanceMetadata& operator=(const CreateInstanceMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateInstanceMetadata(CreateInstanceMetadata&& from) noexcept
    : CreateInstanceMetadata() {
    *this = ::std::move(from);
  }

  inline CreateInstanceMetadata& operator=(CreateInstanceMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateInstanceMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateInstanceMetadata* internal_default_instance() {
    return reinterpret_cast<const CreateInstanceMetadata*>(
               &_CreateInstanceMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(CreateInstanceMetadata* other);
  friend void swap(CreateInstanceMetadata& a, CreateInstanceMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateInstanceMetadata* New() const final {
    return CreateMaybeMessage<CreateInstanceMetadata>(NULL);
  }

  CreateInstanceMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateInstanceMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateInstanceMetadata& from);
  void MergeFrom(const CreateInstanceMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateInstanceMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  private:
  const ::google::bigtable::admin::v2::CreateInstanceRequest& _internal_original_request() const;
  public:
  const ::google::bigtable::admin::v2::CreateInstanceRequest& original_request() const;
  ::google::bigtable::admin::v2::CreateInstanceRequest* release_original_request();
  ::google::bigtable::admin::v2::CreateInstanceRequest* mutable_original_request();
  void set_allocated_original_request(::google::bigtable::admin::v2::CreateInstanceRequest* original_request);

  // .google.protobuf.Timestamp request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_request_time() const;
  public:
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* release_request_time();
  ::google::protobuf::Timestamp* mutable_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp finish_time = 3;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_finish_time() const;
  public:
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* release_finish_time();
  ::google::protobuf::Timestamp* mutable_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateInstanceMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::v2::CreateInstanceRequest* original_request_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateInstanceMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.UpdateInstanceMetadata) */ {
 public:
  UpdateInstanceMetadata();
  virtual ~UpdateInstanceMetadata();

  UpdateInstanceMetadata(const UpdateInstanceMetadata& from);

  inline UpdateInstanceMetadata& operator=(const UpdateInstanceMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateInstanceMetadata(UpdateInstanceMetadata&& from) noexcept
    : UpdateInstanceMetadata() {
    *this = ::std::move(from);
  }

  inline UpdateInstanceMetadata& operator=(UpdateInstanceMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateInstanceMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateInstanceMetadata* internal_default_instance() {
    return reinterpret_cast<const UpdateInstanceMetadata*>(
               &_UpdateInstanceMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(UpdateInstanceMetadata* other);
  friend void swap(UpdateInstanceMetadata& a, UpdateInstanceMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateInstanceMetadata* New() const final {
    return CreateMaybeMessage<UpdateInstanceMetadata>(NULL);
  }

  UpdateInstanceMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateInstanceMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateInstanceMetadata& from);
  void MergeFrom(const UpdateInstanceMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateInstanceMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.v2.PartialUpdateInstanceRequest original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  private:
  const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& _internal_original_request() const;
  public:
  const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& original_request() const;
  ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* release_original_request();
  ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* mutable_original_request();
  void set_allocated_original_request(::google::bigtable::admin::v2::PartialUpdateInstanceRequest* original_request);

  // .google.protobuf.Timestamp request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_request_time() const;
  public:
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* release_request_time();
  ::google::protobuf::Timestamp* mutable_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp finish_time = 3;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_finish_time() const;
  public:
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* release_finish_time();
  ::google::protobuf::Timestamp* mutable_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.UpdateInstanceMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* original_request_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateClusterMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateClusterMetadata) */ {
 public:
  CreateClusterMetadata();
  virtual ~CreateClusterMetadata();

  CreateClusterMetadata(const CreateClusterMetadata& from);

  inline CreateClusterMetadata& operator=(const CreateClusterMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateClusterMetadata(CreateClusterMetadata&& from) noexcept
    : CreateClusterMetadata() {
    *this = ::std::move(from);
  }

  inline CreateClusterMetadata& operator=(CreateClusterMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateClusterMetadata* internal_default_instance() {
    return reinterpret_cast<const CreateClusterMetadata*>(
               &_CreateClusterMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(CreateClusterMetadata* other);
  friend void swap(CreateClusterMetadata& a, CreateClusterMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateClusterMetadata* New() const final {
    return CreateMaybeMessage<CreateClusterMetadata>(NULL);
  }

  CreateClusterMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateClusterMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateClusterMetadata& from);
  void MergeFrom(const CreateClusterMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateClusterMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  private:
  const ::google::bigtable::admin::v2::CreateClusterRequest& _internal_original_request() const;
  public:
  const ::google::bigtable::admin::v2::CreateClusterRequest& original_request() const;
  ::google::bigtable::admin::v2::CreateClusterRequest* release_original_request();
  ::google::bigtable::admin::v2::CreateClusterRequest* mutable_original_request();
  void set_allocated_original_request(::google::bigtable::admin::v2::CreateClusterRequest* original_request);

  // .google.protobuf.Timestamp request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_request_time() const;
  public:
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* release_request_time();
  ::google::protobuf::Timestamp* mutable_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp finish_time = 3;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_finish_time() const;
  public:
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* release_finish_time();
  ::google::protobuf::Timestamp* mutable_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateClusterMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::v2::CreateClusterRequest* original_request_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateClusterMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.UpdateClusterMetadata) */ {
 public:
  UpdateClusterMetadata();
  virtual ~UpdateClusterMetadata();

  UpdateClusterMetadata(const UpdateClusterMetadata& from);

  inline UpdateClusterMetadata& operator=(const UpdateClusterMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateClusterMetadata(UpdateClusterMetadata&& from) noexcept
    : UpdateClusterMetadata() {
    *this = ::std::move(from);
  }

  inline UpdateClusterMetadata& operator=(UpdateClusterMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateClusterMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateClusterMetadata* internal_default_instance() {
    return reinterpret_cast<const UpdateClusterMetadata*>(
               &_UpdateClusterMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(UpdateClusterMetadata* other);
  friend void swap(UpdateClusterMetadata& a, UpdateClusterMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateClusterMetadata* New() const final {
    return CreateMaybeMessage<UpdateClusterMetadata>(NULL);
  }

  UpdateClusterMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateClusterMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateClusterMetadata& from);
  void MergeFrom(const UpdateClusterMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateClusterMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.v2.Cluster original_request = 1;
  bool has_original_request() const;
  void clear_original_request();
  static const int kOriginalRequestFieldNumber = 1;
  private:
  const ::google::bigtable::admin::v2::Cluster& _internal_original_request() const;
  public:
  const ::google::bigtable::admin::v2::Cluster& original_request() const;
  ::google::bigtable::admin::v2::Cluster* release_original_request();
  ::google::bigtable::admin::v2::Cluster* mutable_original_request();
  void set_allocated_original_request(::google::bigtable::admin::v2::Cluster* original_request);

  // .google.protobuf.Timestamp request_time = 2;
  bool has_request_time() const;
  void clear_request_time();
  static const int kRequestTimeFieldNumber = 2;
  private:
  const ::google::protobuf::Timestamp& _internal_request_time() const;
  public:
  const ::google::protobuf::Timestamp& request_time() const;
  ::google::protobuf::Timestamp* release_request_time();
  ::google::protobuf::Timestamp* mutable_request_time();
  void set_allocated_request_time(::google::protobuf::Timestamp* request_time);

  // .google.protobuf.Timestamp finish_time = 3;
  bool has_finish_time() const;
  void clear_finish_time();
  static const int kFinishTimeFieldNumber = 3;
  private:
  const ::google::protobuf::Timestamp& _internal_finish_time() const;
  public:
  const ::google::protobuf::Timestamp& finish_time() const;
  ::google::protobuf::Timestamp* release_finish_time();
  ::google::protobuf::Timestamp* mutable_finish_time();
  void set_allocated_finish_time(::google::protobuf::Timestamp* finish_time);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.UpdateClusterMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::v2::Cluster* original_request_;
  ::google::protobuf::Timestamp* request_time_;
  ::google::protobuf::Timestamp* finish_time_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAppProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.CreateAppProfileRequest) */ {
 public:
  CreateAppProfileRequest();
  virtual ~CreateAppProfileRequest();

  CreateAppProfileRequest(const CreateAppProfileRequest& from);

  inline CreateAppProfileRequest& operator=(const CreateAppProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAppProfileRequest(CreateAppProfileRequest&& from) noexcept
    : CreateAppProfileRequest() {
    *this = ::std::move(from);
  }

  inline CreateAppProfileRequest& operator=(CreateAppProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAppProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAppProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAppProfileRequest*>(
               &_CreateAppProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(CreateAppProfileRequest* other);
  friend void swap(CreateAppProfileRequest& a, CreateAppProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAppProfileRequest* New() const final {
    return CreateMaybeMessage<CreateAppProfileRequest>(NULL);
  }

  CreateAppProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAppProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAppProfileRequest& from);
  void MergeFrom(const CreateAppProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAppProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string app_profile_id = 2;
  void clear_app_profile_id();
  static const int kAppProfileIdFieldNumber = 2;
  const ::std::string& app_profile_id() const;
  void set_app_profile_id(const ::std::string& value);
  #if LANG_CXX11
  void set_app_profile_id(::std::string&& value);
  #endif
  void set_app_profile_id(const char* value);
  void set_app_profile_id(const char* value, size_t size);
  ::std::string* mutable_app_profile_id();
  ::std::string* release_app_profile_id();
  void set_allocated_app_profile_id(::std::string* app_profile_id);

  // .google.bigtable.admin.v2.AppProfile app_profile = 3;
  bool has_app_profile() const;
  void clear_app_profile();
  static const int kAppProfileFieldNumber = 3;
  private:
  const ::google::bigtable::admin::v2::AppProfile& _internal_app_profile() const;
  public:
  const ::google::bigtable::admin::v2::AppProfile& app_profile() const;
  ::google::bigtable::admin::v2::AppProfile* release_app_profile();
  ::google::bigtable::admin::v2::AppProfile* mutable_app_profile();
  void set_allocated_app_profile(::google::bigtable::admin::v2::AppProfile* app_profile);

  // bool ignore_warnings = 4;
  void clear_ignore_warnings();
  static const int kIgnoreWarningsFieldNumber = 4;
  bool ignore_warnings() const;
  void set_ignore_warnings(bool value);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateAppProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr app_profile_id_;
  ::google::bigtable::admin::v2::AppProfile* app_profile_;
  bool ignore_warnings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetAppProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.GetAppProfileRequest) */ {
 public:
  GetAppProfileRequest();
  virtual ~GetAppProfileRequest();

  GetAppProfileRequest(const GetAppProfileRequest& from);

  inline GetAppProfileRequest& operator=(const GetAppProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetAppProfileRequest(GetAppProfileRequest&& from) noexcept
    : GetAppProfileRequest() {
    *this = ::std::move(from);
  }

  inline GetAppProfileRequest& operator=(GetAppProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetAppProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetAppProfileRequest* internal_default_instance() {
    return reinterpret_cast<const GetAppProfileRequest*>(
               &_GetAppProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(GetAppProfileRequest* other);
  friend void swap(GetAppProfileRequest& a, GetAppProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetAppProfileRequest* New() const final {
    return CreateMaybeMessage<GetAppProfileRequest>(NULL);
  }

  GetAppProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetAppProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetAppProfileRequest& from);
  void MergeFrom(const GetAppProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetAppProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GetAppProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAppProfilesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListAppProfilesRequest) */ {
 public:
  ListAppProfilesRequest();
  virtual ~ListAppProfilesRequest();

  ListAppProfilesRequest(const ListAppProfilesRequest& from);

  inline ListAppProfilesRequest& operator=(const ListAppProfilesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListAppProfilesRequest(ListAppProfilesRequest&& from) noexcept
    : ListAppProfilesRequest() {
    *this = ::std::move(from);
  }

  inline ListAppProfilesRequest& operator=(ListAppProfilesRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAppProfilesRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListAppProfilesRequest* internal_default_instance() {
    return reinterpret_cast<const ListAppProfilesRequest*>(
               &_ListAppProfilesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(ListAppProfilesRequest* other);
  friend void swap(ListAppProfilesRequest& a, ListAppProfilesRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListAppProfilesRequest* New() const final {
    return CreateMaybeMessage<ListAppProfilesRequest>(NULL);
  }

  ListAppProfilesRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListAppProfilesRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListAppProfilesRequest& from);
  void MergeFrom(const ListAppProfilesRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListAppProfilesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  const ::std::string& parent() const;
  void set_parent(const ::std::string& value);
  #if LANG_CXX11
  void set_parent(::std::string&& value);
  #endif
  void set_parent(const char* value);
  void set_parent(const char* value, size_t size);
  ::std::string* mutable_parent();
  ::std::string* release_parent();
  void set_allocated_parent(::std::string* parent);

  // string page_token = 2;
  void clear_page_token();
  static const int kPageTokenFieldNumber = 2;
  const ::std::string& page_token() const;
  void set_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_page_token(::std::string&& value);
  #endif
  void set_page_token(const char* value);
  void set_page_token(const char* value, size_t size);
  ::std::string* mutable_page_token();
  ::std::string* release_page_token();
  void set_allocated_page_token(::std::string* page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListAppProfilesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_;
  ::google::protobuf::internal::ArenaStringPtr page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListAppProfilesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.ListAppProfilesResponse) */ {
 public:
  ListAppProfilesResponse();
  virtual ~ListAppProfilesResponse();

  ListAppProfilesResponse(const ListAppProfilesResponse& from);

  inline ListAppProfilesResponse& operator=(const ListAppProfilesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ListAppProfilesResponse(ListAppProfilesResponse&& from) noexcept
    : ListAppProfilesResponse() {
    *this = ::std::move(from);
  }

  inline ListAppProfilesResponse& operator=(ListAppProfilesResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ListAppProfilesResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListAppProfilesResponse* internal_default_instance() {
    return reinterpret_cast<const ListAppProfilesResponse*>(
               &_ListAppProfilesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(ListAppProfilesResponse* other);
  friend void swap(ListAppProfilesResponse& a, ListAppProfilesResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ListAppProfilesResponse* New() const final {
    return CreateMaybeMessage<ListAppProfilesResponse>(NULL);
  }

  ListAppProfilesResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ListAppProfilesResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ListAppProfilesResponse& from);
  void MergeFrom(const ListAppProfilesResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListAppProfilesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.bigtable.admin.v2.AppProfile app_profiles = 1;
  int app_profiles_size() const;
  void clear_app_profiles();
  static const int kAppProfilesFieldNumber = 1;
  ::google::bigtable::admin::v2::AppProfile* mutable_app_profiles(int index);
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::AppProfile >*
      mutable_app_profiles();
  const ::google::bigtable::admin::v2::AppProfile& app_profiles(int index) const;
  ::google::bigtable::admin::v2::AppProfile* add_app_profiles();
  const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::AppProfile >&
      app_profiles() const;

  // string next_page_token = 2;
  void clear_next_page_token();
  static const int kNextPageTokenFieldNumber = 2;
  const ::std::string& next_page_token() const;
  void set_next_page_token(const ::std::string& value);
  #if LANG_CXX11
  void set_next_page_token(::std::string&& value);
  #endif
  void set_next_page_token(const char* value);
  void set_next_page_token(const char* value, size_t size);
  ::std::string* mutable_next_page_token();
  ::std::string* release_next_page_token();
  void set_allocated_next_page_token(::std::string* next_page_token);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListAppProfilesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::AppProfile > app_profiles_;
  ::google::protobuf::internal::ArenaStringPtr next_page_token_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAppProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.UpdateAppProfileRequest) */ {
 public:
  UpdateAppProfileRequest();
  virtual ~UpdateAppProfileRequest();

  UpdateAppProfileRequest(const UpdateAppProfileRequest& from);

  inline UpdateAppProfileRequest& operator=(const UpdateAppProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAppProfileRequest(UpdateAppProfileRequest&& from) noexcept
    : UpdateAppProfileRequest() {
    *this = ::std::move(from);
  }

  inline UpdateAppProfileRequest& operator=(UpdateAppProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAppProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateAppProfileRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateAppProfileRequest*>(
               &_UpdateAppProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(UpdateAppProfileRequest* other);
  friend void swap(UpdateAppProfileRequest& a, UpdateAppProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAppProfileRequest* New() const final {
    return CreateMaybeMessage<UpdateAppProfileRequest>(NULL);
  }

  UpdateAppProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateAppProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateAppProfileRequest& from);
  void MergeFrom(const UpdateAppProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateAppProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.bigtable.admin.v2.AppProfile app_profile = 1;
  bool has_app_profile() const;
  void clear_app_profile();
  static const int kAppProfileFieldNumber = 1;
  private:
  const ::google::bigtable::admin::v2::AppProfile& _internal_app_profile() const;
  public:
  const ::google::bigtable::admin::v2::AppProfile& app_profile() const;
  ::google::bigtable::admin::v2::AppProfile* release_app_profile();
  ::google::bigtable::admin::v2::AppProfile* mutable_app_profile();
  void set_allocated_app_profile(::google::bigtable::admin::v2::AppProfile* app_profile);

  // .google.protobuf.FieldMask update_mask = 2;
  bool has_update_mask() const;
  void clear_update_mask();
  static const int kUpdateMaskFieldNumber = 2;
  private:
  const ::google::protobuf::FieldMask& _internal_update_mask() const;
  public:
  const ::google::protobuf::FieldMask& update_mask() const;
  ::google::protobuf::FieldMask* release_update_mask();
  ::google::protobuf::FieldMask* mutable_update_mask();
  void set_allocated_update_mask(::google::protobuf::FieldMask* update_mask);

  // bool ignore_warnings = 3;
  void clear_ignore_warnings();
  static const int kIgnoreWarningsFieldNumber = 3;
  bool ignore_warnings() const;
  void set_ignore_warnings(bool value);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.UpdateAppProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::bigtable::admin::v2::AppProfile* app_profile_;
  ::google::protobuf::FieldMask* update_mask_;
  bool ignore_warnings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteAppProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.DeleteAppProfileRequest) */ {
 public:
  DeleteAppProfileRequest();
  virtual ~DeleteAppProfileRequest();

  DeleteAppProfileRequest(const DeleteAppProfileRequest& from);

  inline DeleteAppProfileRequest& operator=(const DeleteAppProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeleteAppProfileRequest(DeleteAppProfileRequest&& from) noexcept
    : DeleteAppProfileRequest() {
    *this = ::std::move(from);
  }

  inline DeleteAppProfileRequest& operator=(DeleteAppProfileRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteAppProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeleteAppProfileRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAppProfileRequest*>(
               &_DeleteAppProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(DeleteAppProfileRequest* other);
  friend void swap(DeleteAppProfileRequest& a, DeleteAppProfileRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeleteAppProfileRequest* New() const final {
    return CreateMaybeMessage<DeleteAppProfileRequest>(NULL);
  }

  DeleteAppProfileRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeleteAppProfileRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeleteAppProfileRequest& from);
  void MergeFrom(const DeleteAppProfileRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeleteAppProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bool ignore_warnings = 2;
  void clear_ignore_warnings();
  static const int kIgnoreWarningsFieldNumber = 2;
  bool ignore_warnings() const;
  void set_ignore_warnings(bool value);

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DeleteAppProfileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  bool ignore_warnings_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAppProfileMetadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.bigtable.admin.v2.UpdateAppProfileMetadata) */ {
 public:
  UpdateAppProfileMetadata();
  virtual ~UpdateAppProfileMetadata();

  UpdateAppProfileMetadata(const UpdateAppProfileMetadata& from);

  inline UpdateAppProfileMetadata& operator=(const UpdateAppProfileMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateAppProfileMetadata(UpdateAppProfileMetadata&& from) noexcept
    : UpdateAppProfileMetadata() {
    *this = ::std::move(from);
  }

  inline UpdateAppProfileMetadata& operator=(UpdateAppProfileMetadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAppProfileMetadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateAppProfileMetadata* internal_default_instance() {
    return reinterpret_cast<const UpdateAppProfileMetadata*>(
               &_UpdateAppProfileMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(UpdateAppProfileMetadata* other);
  friend void swap(UpdateAppProfileMetadata& a, UpdateAppProfileMetadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateAppProfileMetadata* New() const final {
    return CreateMaybeMessage<UpdateAppProfileMetadata>(NULL);
  }

  UpdateAppProfileMetadata* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateAppProfileMetadata>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateAppProfileMetadata& from);
  void MergeFrom(const UpdateAppProfileMetadata& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateAppProfileMetadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.UpdateAppProfileMetadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateInstanceRequest

// string parent = 1;
inline void CreateInstanceRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateInstanceRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
#if LANG_CXX11
inline void CreateInstanceRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
#endif
inline void CreateInstanceRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
inline void CreateInstanceRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}
inline ::std::string* CreateInstanceRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceRequest.parent)
}

// string instance_id = 2;
inline void CreateInstanceRequest::clear_instance_id() {
  instance_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateInstanceRequest::instance_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
  return instance_id_.GetNoArena();
}
inline void CreateInstanceRequest::set_instance_id(const ::std::string& value) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
#if LANG_CXX11
inline void CreateInstanceRequest::set_instance_id(::std::string&& value) {
  
  instance_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
#endif
inline void CreateInstanceRequest::set_instance_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
inline void CreateInstanceRequest::set_instance_id(const char* value, size_t size) {
  
  instance_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}
inline ::std::string* CreateInstanceRequest::mutable_instance_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
  return instance_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateInstanceRequest::release_instance_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
  
  return instance_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateInstanceRequest::set_allocated_instance_id(::std::string* instance_id) {
  if (instance_id != NULL) {
    
  } else {
    
  }
  instance_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), instance_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceRequest.instance_id)
}

// .google.bigtable.admin.v2.Instance instance = 3;
inline bool CreateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
inline const ::google::bigtable::admin::v2::Instance& CreateInstanceRequest::_internal_instance() const {
  return *instance_;
}
inline const ::google::bigtable::admin::v2::Instance& CreateInstanceRequest::instance() const {
  const ::google::bigtable::admin::v2::Instance* p = instance_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceRequest.instance)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::Instance*>(
      &::google::bigtable::admin::v2::_Instance_default_instance_);
}
inline ::google::bigtable::admin::v2::Instance* CreateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceRequest.instance)
  
  ::google::bigtable::admin::v2::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::Instance* CreateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::Instance>(GetArenaNoVirtual());
    instance_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceRequest.instance)
  return instance_;
}
inline void CreateInstanceRequest::set_allocated_instance(::google::bigtable::admin::v2::Instance* instance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instance_);
  }
  if (instance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instance, submessage_arena);
    }
    
  } else {
    
  }
  instance_ = instance;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceRequest.instance)
}

// map<string, .google.bigtable.admin.v2.Cluster> clusters = 4;
inline int CreateInstanceRequest::clusters_size() const {
  return clusters_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >&
CreateInstanceRequest::clusters() const {
  // @@protoc_insertion_point(field_map:google.bigtable.admin.v2.CreateInstanceRequest.clusters)
  return clusters_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::bigtable::admin::v2::Cluster >*
CreateInstanceRequest::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_map:google.bigtable.admin.v2.CreateInstanceRequest.clusters)
  return clusters_.MutableMap();
}

// -------------------------------------------------------------------

// GetInstanceRequest

// string name = 1;
inline void GetInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetInstanceRequest.name)
  return name_.GetNoArena();
}
inline void GetInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetInstanceRequest.name)
}
#if LANG_CXX11
inline void GetInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.GetInstanceRequest.name)
}
#endif
inline void GetInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetInstanceRequest.name)
}
inline void GetInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetInstanceRequest.name)
}
inline ::std::string* GetInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetInstanceRequest.name)
}

// -------------------------------------------------------------------

// ListInstancesRequest

// string parent = 1;
inline void ListInstancesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListInstancesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
#endif
inline void ListInstancesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
inline void ListInstancesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesRequest.parent)
}
inline ::std::string* ListInstancesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListInstancesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListInstancesRequest.parent)
}

// string page_token = 2;
inline void ListInstancesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListInstancesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
#if LANG_CXX11
inline void ListInstancesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
#endif
inline void ListInstancesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
inline void ListInstancesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}
inline ::std::string* ListInstancesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListInstancesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListInstancesRequest.page_token)
}

// -------------------------------------------------------------------

// ListInstancesResponse

// repeated .google.bigtable.admin.v2.Instance instances = 1;
inline int ListInstancesResponse::instances_size() const {
  return instances_.size();
}
inline ::google::bigtable::admin::v2::Instance* ListInstancesResponse::mutable_instances(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance >*
ListInstancesResponse::mutable_instances() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return &instances_;
}
inline const ::google::bigtable::admin::v2::Instance& ListInstancesResponse::instances(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_.Get(index);
}
inline ::google::bigtable::admin::v2::Instance* ListInstancesResponse::add_instances() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Instance >&
ListInstancesResponse::instances() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListInstancesResponse.instances)
  return instances_;
}

// repeated string failed_locations = 2;
inline int ListInstancesResponse::failed_locations_size() const {
  return failed_locations_.size();
}
inline void ListInstancesResponse::clear_failed_locations() {
  failed_locations_.Clear();
}
inline const ::std::string& ListInstancesResponse::failed_locations(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_.Get(index);
}
inline ::std::string* ListInstancesResponse::mutable_failed_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_.Mutable(index);
}
inline void ListInstancesResponse::set_failed_locations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListInstancesResponse::set_failed_locations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListInstancesResponse::set_failed_locations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
inline void ListInstancesResponse::set_failed_locations(int index, const char* value, size_t size) {
  failed_locations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
inline ::std::string* ListInstancesResponse::add_failed_locations() {
  // @@protoc_insertion_point(field_add_mutable:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_.Add();
}
inline void ListInstancesResponse::add_failed_locations(const ::std::string& value) {
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
#if LANG_CXX11
inline void ListInstancesResponse::add_failed_locations(::std::string&& value) {
  failed_locations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
#endif
inline void ListInstancesResponse::add_failed_locations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
inline void ListInstancesResponse::add_failed_locations(const char* value, size_t size) {
  failed_locations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListInstancesResponse::failed_locations() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return failed_locations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListInstancesResponse::mutable_failed_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListInstancesResponse.failed_locations)
  return &failed_locations_;
}

// string next_page_token = 3;
inline void ListInstancesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListInstancesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListInstancesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListInstancesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
#endif
inline void ListInstancesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
inline void ListInstancesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}
inline ::std::string* ListInstancesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListInstancesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListInstancesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListInstancesResponse.next_page_token)
}

// -------------------------------------------------------------------

// PartialUpdateInstanceRequest

// .google.bigtable.admin.v2.Instance instance = 1;
inline bool PartialUpdateInstanceRequest::has_instance() const {
  return this != internal_default_instance() && instance_ != NULL;
}
inline const ::google::bigtable::admin::v2::Instance& PartialUpdateInstanceRequest::_internal_instance() const {
  return *instance_;
}
inline const ::google::bigtable::admin::v2::Instance& PartialUpdateInstanceRequest::instance() const {
  const ::google::bigtable::admin::v2::Instance* p = instance_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.PartialUpdateInstanceRequest.instance)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::Instance*>(
      &::google::bigtable::admin::v2::_Instance_default_instance_);
}
inline ::google::bigtable::admin::v2::Instance* PartialUpdateInstanceRequest::release_instance() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.PartialUpdateInstanceRequest.instance)
  
  ::google::bigtable::admin::v2::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::Instance* PartialUpdateInstanceRequest::mutable_instance() {
  
  if (instance_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::Instance>(GetArenaNoVirtual());
    instance_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.PartialUpdateInstanceRequest.instance)
  return instance_;
}
inline void PartialUpdateInstanceRequest::set_allocated_instance(::google::bigtable::admin::v2::Instance* instance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instance_);
  }
  if (instance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instance, submessage_arena);
    }
    
  } else {
    
  }
  instance_ = instance;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.PartialUpdateInstanceRequest.instance)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool PartialUpdateInstanceRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& PartialUpdateInstanceRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& PartialUpdateInstanceRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.PartialUpdateInstanceRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* PartialUpdateInstanceRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.PartialUpdateInstanceRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* PartialUpdateInstanceRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.PartialUpdateInstanceRequest.update_mask)
  return update_mask_;
}
inline void PartialUpdateInstanceRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.PartialUpdateInstanceRequest.update_mask)
}

// -------------------------------------------------------------------

// DeleteInstanceRequest

// string name = 1;
inline void DeleteInstanceRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteInstanceRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteInstanceRequest.name)
  return name_.GetNoArena();
}
inline void DeleteInstanceRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
#if LANG_CXX11
inline void DeleteInstanceRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
#endif
inline void DeleteInstanceRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
inline void DeleteInstanceRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}
inline ::std::string* DeleteInstanceRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteInstanceRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteInstanceRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteInstanceRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteInstanceRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteInstanceRequest.name)
}

// -------------------------------------------------------------------

// CreateClusterRequest

// string parent = 1;
inline void CreateClusterRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateClusterRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
#if LANG_CXX11
inline void CreateClusterRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
#endif
inline void CreateClusterRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
inline void CreateClusterRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateClusterRequest.parent)
}
inline ::std::string* CreateClusterRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterRequest.parent)
}

// string cluster_id = 2;
inline void CreateClusterRequest::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterRequest::cluster_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CreateClusterRequest::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
#if LANG_CXX11
inline void CreateClusterRequest::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
#endif
inline void CreateClusterRequest::set_cluster_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
inline void CreateClusterRequest::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}
inline ::std::string* CreateClusterRequest::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterRequest::release_cluster_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterRequest::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterRequest.cluster_id)
}

// .google.bigtable.admin.v2.Cluster cluster = 3;
inline bool CreateClusterRequest::has_cluster() const {
  return this != internal_default_instance() && cluster_ != NULL;
}
inline const ::google::bigtable::admin::v2::Cluster& CreateClusterRequest::_internal_cluster() const {
  return *cluster_;
}
inline const ::google::bigtable::admin::v2::Cluster& CreateClusterRequest::cluster() const {
  const ::google::bigtable::admin::v2::Cluster* p = cluster_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterRequest.cluster)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::Cluster*>(
      &::google::bigtable::admin::v2::_Cluster_default_instance_);
}
inline ::google::bigtable::admin::v2::Cluster* CreateClusterRequest::release_cluster() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterRequest.cluster)
  
  ::google::bigtable::admin::v2::Cluster* temp = cluster_;
  cluster_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::Cluster* CreateClusterRequest::mutable_cluster() {
  
  if (cluster_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::Cluster>(GetArenaNoVirtual());
    cluster_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterRequest.cluster)
  return cluster_;
}
inline void CreateClusterRequest::set_allocated_cluster(::google::bigtable::admin::v2::Cluster* cluster) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cluster_);
  }
  if (cluster) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cluster = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cluster, submessage_arena);
    }
    
  } else {
    
  }
  cluster_ = cluster;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterRequest.cluster)
}

// -------------------------------------------------------------------

// GetClusterRequest

// string name = 1;
inline void GetClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetClusterRequest.name)
  return name_.GetNoArena();
}
inline void GetClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetClusterRequest.name)
}
#if LANG_CXX11
inline void GetClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.GetClusterRequest.name)
}
#endif
inline void GetClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetClusterRequest.name)
}
inline void GetClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetClusterRequest.name)
}
inline ::std::string* GetClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetClusterRequest.name)
}

// -------------------------------------------------------------------

// ListClustersRequest

// string parent = 1;
inline void ListClustersRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListClustersRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersRequest.parent)
  return parent_.GetNoArena();
}
inline void ListClustersRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersRequest.parent)
}
#if LANG_CXX11
inline void ListClustersRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListClustersRequest.parent)
}
#endif
inline void ListClustersRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersRequest.parent)
}
inline void ListClustersRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersRequest.parent)
}
inline ::std::string* ListClustersRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListClustersRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListClustersRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListClustersRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListClustersRequest.parent)
}

// string page_token = 2;
inline void ListClustersRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListClustersRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListClustersRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
#if LANG_CXX11
inline void ListClustersRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
#endif
inline void ListClustersRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
inline void ListClustersRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersRequest.page_token)
}
inline ::std::string* ListClustersRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListClustersRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListClustersRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListClustersRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListClustersRequest.page_token)
}

// -------------------------------------------------------------------

// ListClustersResponse

// repeated .google.bigtable.admin.v2.Cluster clusters = 1;
inline int ListClustersResponse::clusters_size() const {
  return clusters_.size();
}
inline ::google::bigtable::admin::v2::Cluster* ListClustersResponse::mutable_clusters(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster >*
ListClustersResponse::mutable_clusters() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return &clusters_;
}
inline const ::google::bigtable::admin::v2::Cluster& ListClustersResponse::clusters(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_.Get(index);
}
inline ::google::bigtable::admin::v2::Cluster* ListClustersResponse::add_clusters() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::Cluster >&
ListClustersResponse::clusters() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListClustersResponse.clusters)
  return clusters_;
}

// repeated string failed_locations = 2;
inline int ListClustersResponse::failed_locations_size() const {
  return failed_locations_.size();
}
inline void ListClustersResponse::clear_failed_locations() {
  failed_locations_.Clear();
}
inline const ::std::string& ListClustersResponse::failed_locations(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_.Get(index);
}
inline ::std::string* ListClustersResponse::mutable_failed_locations(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_.Mutable(index);
}
inline void ListClustersResponse::set_failed_locations(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ListClustersResponse::set_failed_locations(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  failed_locations_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ListClustersResponse::set_failed_locations(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
inline void ListClustersResponse::set_failed_locations(int index, const char* value, size_t size) {
  failed_locations_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
inline ::std::string* ListClustersResponse::add_failed_locations() {
  // @@protoc_insertion_point(field_add_mutable:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_.Add();
}
inline void ListClustersResponse::add_failed_locations(const ::std::string& value) {
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
#if LANG_CXX11
inline void ListClustersResponse::add_failed_locations(::std::string&& value) {
  failed_locations_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
#endif
inline void ListClustersResponse::add_failed_locations(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  failed_locations_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
inline void ListClustersResponse::add_failed_locations(const char* value, size_t size) {
  failed_locations_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ListClustersResponse::failed_locations() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return failed_locations_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ListClustersResponse::mutable_failed_locations() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListClustersResponse.failed_locations)
  return &failed_locations_;
}

// string next_page_token = 3;
inline void ListClustersResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListClustersResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListClustersResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
#if LANG_CXX11
inline void ListClustersResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
#endif
inline void ListClustersResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
inline void ListClustersResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}
inline ::std::string* ListClustersResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListClustersResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListClustersResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListClustersResponse.next_page_token)
}

// -------------------------------------------------------------------

// DeleteClusterRequest

// string name = 1;
inline void DeleteClusterRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteClusterRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteClusterRequest.name)
  return name_.GetNoArena();
}
inline void DeleteClusterRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
#if LANG_CXX11
inline void DeleteClusterRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
#endif
inline void DeleteClusterRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
inline void DeleteClusterRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteClusterRequest.name)
}
inline ::std::string* DeleteClusterRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteClusterRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteClusterRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteClusterRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteClusterRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteClusterRequest.name)
}

// -------------------------------------------------------------------

// CreateInstanceMetadata

// .google.bigtable.admin.v2.CreateInstanceRequest original_request = 1;
inline bool CreateInstanceMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
inline void CreateInstanceMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
}
inline const ::google::bigtable::admin::v2::CreateInstanceRequest& CreateInstanceMetadata::_internal_original_request() const {
  return *original_request_;
}
inline const ::google::bigtable::admin::v2::CreateInstanceRequest& CreateInstanceMetadata::original_request() const {
  const ::google::bigtable::admin::v2::CreateInstanceRequest* p = original_request_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::CreateInstanceRequest*>(
      &::google::bigtable::admin::v2::_CreateInstanceRequest_default_instance_);
}
inline ::google::bigtable::admin::v2::CreateInstanceRequest* CreateInstanceMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
  
  ::google::bigtable::admin::v2::CreateInstanceRequest* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::CreateInstanceRequest* CreateInstanceMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::CreateInstanceRequest>(GetArenaNoVirtual());
    original_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
  return original_request_;
}
inline void CreateInstanceMetadata::set_allocated_original_request(::google::bigtable::admin::v2::CreateInstanceRequest* original_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_request_;
  }
  if (original_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      original_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, original_request, submessage_arena);
    }
    
  } else {
    
  }
  original_request_ = original_request;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
inline bool CreateInstanceMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::_internal_request_time() const {
  return *request_time_;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::request_time() const {
  const ::google::protobuf::Timestamp* p = request_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    request_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
  return request_time_;
}
inline void CreateInstanceMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_time_);
  }
  if (request_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(request_time)->GetArena();
    if (message_arena != submessage_arena) {
      request_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_time, submessage_arena);
    }
    
  } else {
    
  }
  request_time_ = request_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
inline bool CreateInstanceMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::_internal_finish_time() const {
  return *finish_time_;
}
inline const ::google::protobuf::Timestamp& CreateInstanceMetadata::finish_time() const {
  const ::google::protobuf::Timestamp* p = finish_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* CreateInstanceMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    finish_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
  return finish_time_;
}
inline void CreateInstanceMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(finish_time_);
  }
  if (finish_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(finish_time)->GetArena();
    if (message_arena != submessage_arena) {
      finish_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, finish_time, submessage_arena);
    }
    
  } else {
    
  }
  finish_time_ = finish_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateInstanceMetadata.finish_time)
}

// -------------------------------------------------------------------

// UpdateInstanceMetadata

// .google.bigtable.admin.v2.PartialUpdateInstanceRequest original_request = 1;
inline bool UpdateInstanceMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
inline void UpdateInstanceMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
}
inline const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& UpdateInstanceMetadata::_internal_original_request() const {
  return *original_request_;
}
inline const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest& UpdateInstanceMetadata::original_request() const {
  const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* p = original_request_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateInstanceMetadata.original_request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::PartialUpdateInstanceRequest*>(
      &::google::bigtable::admin::v2::_PartialUpdateInstanceRequest_default_instance_);
}
inline ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* UpdateInstanceMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateInstanceMetadata.original_request)
  
  ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::PartialUpdateInstanceRequest* UpdateInstanceMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::PartialUpdateInstanceRequest>(GetArenaNoVirtual());
    original_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateInstanceMetadata.original_request)
  return original_request_;
}
inline void UpdateInstanceMetadata::set_allocated_original_request(::google::bigtable::admin::v2::PartialUpdateInstanceRequest* original_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_request_;
  }
  if (original_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      original_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, original_request, submessage_arena);
    }
    
  } else {
    
  }
  original_request_ = original_request;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateInstanceMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
inline bool UpdateInstanceMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::_internal_request_time() const {
  return *request_time_;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::request_time() const {
  const ::google::protobuf::Timestamp* p = request_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateInstanceMetadata.request_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateInstanceMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    request_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateInstanceMetadata.request_time)
  return request_time_;
}
inline void UpdateInstanceMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_time_);
  }
  if (request_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(request_time)->GetArena();
    if (message_arena != submessage_arena) {
      request_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_time, submessage_arena);
    }
    
  } else {
    
  }
  request_time_ = request_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateInstanceMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
inline bool UpdateInstanceMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::_internal_finish_time() const {
  return *finish_time_;
}
inline const ::google::protobuf::Timestamp& UpdateInstanceMetadata::finish_time() const {
  const ::google::protobuf::Timestamp* p = finish_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateInstanceMetadata.finish_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateInstanceMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* UpdateInstanceMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    finish_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateInstanceMetadata.finish_time)
  return finish_time_;
}
inline void UpdateInstanceMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(finish_time_);
  }
  if (finish_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(finish_time)->GetArena();
    if (message_arena != submessage_arena) {
      finish_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, finish_time, submessage_arena);
    }
    
  } else {
    
  }
  finish_time_ = finish_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateInstanceMetadata.finish_time)
}

// -------------------------------------------------------------------

// CreateClusterMetadata

// .google.bigtable.admin.v2.CreateClusterRequest original_request = 1;
inline bool CreateClusterMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
inline void CreateClusterMetadata::clear_original_request() {
  if (GetArenaNoVirtual() == NULL && original_request_ != NULL) {
    delete original_request_;
  }
  original_request_ = NULL;
}
inline const ::google::bigtable::admin::v2::CreateClusterRequest& CreateClusterMetadata::_internal_original_request() const {
  return *original_request_;
}
inline const ::google::bigtable::admin::v2::CreateClusterRequest& CreateClusterMetadata::original_request() const {
  const ::google::bigtable::admin::v2::CreateClusterRequest* p = original_request_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::CreateClusterRequest*>(
      &::google::bigtable::admin::v2::_CreateClusterRequest_default_instance_);
}
inline ::google::bigtable::admin::v2::CreateClusterRequest* CreateClusterMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
  
  ::google::bigtable::admin::v2::CreateClusterRequest* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::CreateClusterRequest* CreateClusterMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::CreateClusterRequest>(GetArenaNoVirtual());
    original_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
  return original_request_;
}
inline void CreateClusterMetadata::set_allocated_original_request(::google::bigtable::admin::v2::CreateClusterRequest* original_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete original_request_;
  }
  if (original_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      original_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, original_request, submessage_arena);
    }
    
  } else {
    
  }
  original_request_ = original_request;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
inline bool CreateClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& CreateClusterMetadata::_internal_request_time() const {
  return *request_time_;
}
inline const ::google::protobuf::Timestamp& CreateClusterMetadata::request_time() const {
  const ::google::protobuf::Timestamp* p = request_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    request_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
  return request_time_;
}
inline void CreateClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_time_);
  }
  if (request_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(request_time)->GetArena();
    if (message_arena != submessage_arena) {
      request_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_time, submessage_arena);
    }
    
  } else {
    
  }
  request_time_ = request_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
inline bool CreateClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& CreateClusterMetadata::_internal_finish_time() const {
  return *finish_time_;
}
inline const ::google::protobuf::Timestamp& CreateClusterMetadata::finish_time() const {
  const ::google::protobuf::Timestamp* p = finish_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* CreateClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    finish_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
  return finish_time_;
}
inline void CreateClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(finish_time_);
  }
  if (finish_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(finish_time)->GetArena();
    if (message_arena != submessage_arena) {
      finish_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, finish_time, submessage_arena);
    }
    
  } else {
    
  }
  finish_time_ = finish_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateClusterMetadata.finish_time)
}

// -------------------------------------------------------------------

// UpdateClusterMetadata

// .google.bigtable.admin.v2.Cluster original_request = 1;
inline bool UpdateClusterMetadata::has_original_request() const {
  return this != internal_default_instance() && original_request_ != NULL;
}
inline const ::google::bigtable::admin::v2::Cluster& UpdateClusterMetadata::_internal_original_request() const {
  return *original_request_;
}
inline const ::google::bigtable::admin::v2::Cluster& UpdateClusterMetadata::original_request() const {
  const ::google::bigtable::admin::v2::Cluster* p = original_request_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::Cluster*>(
      &::google::bigtable::admin::v2::_Cluster_default_instance_);
}
inline ::google::bigtable::admin::v2::Cluster* UpdateClusterMetadata::release_original_request() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
  
  ::google::bigtable::admin::v2::Cluster* temp = original_request_;
  original_request_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::Cluster* UpdateClusterMetadata::mutable_original_request() {
  
  if (original_request_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::Cluster>(GetArenaNoVirtual());
    original_request_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
  return original_request_;
}
inline void UpdateClusterMetadata::set_allocated_original_request(::google::bigtable::admin::v2::Cluster* original_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(original_request_);
  }
  if (original_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      original_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, original_request, submessage_arena);
    }
    
  } else {
    
  }
  original_request_ = original_request;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateClusterMetadata.original_request)
}

// .google.protobuf.Timestamp request_time = 2;
inline bool UpdateClusterMetadata::has_request_time() const {
  return this != internal_default_instance() && request_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::_internal_request_time() const {
  return *request_time_;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::request_time() const {
  const ::google::protobuf::Timestamp* p = request_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::release_request_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
  
  ::google::protobuf::Timestamp* temp = request_time_;
  request_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_request_time() {
  
  if (request_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    request_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
  return request_time_;
}
inline void UpdateClusterMetadata::set_allocated_request_time(::google::protobuf::Timestamp* request_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(request_time_);
  }
  if (request_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(request_time)->GetArena();
    if (message_arena != submessage_arena) {
      request_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_time, submessage_arena);
    }
    
  } else {
    
  }
  request_time_ = request_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateClusterMetadata.request_time)
}

// .google.protobuf.Timestamp finish_time = 3;
inline bool UpdateClusterMetadata::has_finish_time() const {
  return this != internal_default_instance() && finish_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::_internal_finish_time() const {
  return *finish_time_;
}
inline const ::google::protobuf::Timestamp& UpdateClusterMetadata::finish_time() const {
  const ::google::protobuf::Timestamp* p = finish_time_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::release_finish_time() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
  
  ::google::protobuf::Timestamp* temp = finish_time_;
  finish_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* UpdateClusterMetadata::mutable_finish_time() {
  
  if (finish_time_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArenaNoVirtual());
    finish_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
  return finish_time_;
}
inline void UpdateClusterMetadata::set_allocated_finish_time(::google::protobuf::Timestamp* finish_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(finish_time_);
  }
  if (finish_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(finish_time)->GetArena();
    if (message_arena != submessage_arena) {
      finish_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, finish_time, submessage_arena);
    }
    
  } else {
    
  }
  finish_time_ = finish_time;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateClusterMetadata.finish_time)
}

// -------------------------------------------------------------------

// CreateAppProfileRequest

// string parent = 1;
inline void CreateAppProfileRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAppProfileRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
  return parent_.GetNoArena();
}
inline void CreateAppProfileRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
}
#if LANG_CXX11
inline void CreateAppProfileRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
}
#endif
inline void CreateAppProfileRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
}
inline void CreateAppProfileRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
}
inline ::std::string* CreateAppProfileRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAppProfileRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAppProfileRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateAppProfileRequest.parent)
}

// string app_profile_id = 2;
inline void CreateAppProfileRequest::clear_app_profile_id() {
  app_profile_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAppProfileRequest::app_profile_id() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
  return app_profile_id_.GetNoArena();
}
inline void CreateAppProfileRequest::set_app_profile_id(const ::std::string& value) {
  
  app_profile_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
}
#if LANG_CXX11
inline void CreateAppProfileRequest::set_app_profile_id(::std::string&& value) {
  
  app_profile_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
}
#endif
inline void CreateAppProfileRequest::set_app_profile_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  app_profile_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
}
inline void CreateAppProfileRequest::set_app_profile_id(const char* value, size_t size) {
  
  app_profile_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
}
inline ::std::string* CreateAppProfileRequest::mutable_app_profile_id() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
  return app_profile_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAppProfileRequest::release_app_profile_id() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
  
  return app_profile_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAppProfileRequest::set_allocated_app_profile_id(::std::string* app_profile_id) {
  if (app_profile_id != NULL) {
    
  } else {
    
  }
  app_profile_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_profile_id);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile_id)
}

// .google.bigtable.admin.v2.AppProfile app_profile = 3;
inline bool CreateAppProfileRequest::has_app_profile() const {
  return this != internal_default_instance() && app_profile_ != NULL;
}
inline const ::google::bigtable::admin::v2::AppProfile& CreateAppProfileRequest::_internal_app_profile() const {
  return *app_profile_;
}
inline const ::google::bigtable::admin::v2::AppProfile& CreateAppProfileRequest::app_profile() const {
  const ::google::bigtable::admin::v2::AppProfile* p = app_profile_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::AppProfile*>(
      &::google::bigtable::admin::v2::_AppProfile_default_instance_);
}
inline ::google::bigtable::admin::v2::AppProfile* CreateAppProfileRequest::release_app_profile() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile)
  
  ::google::bigtable::admin::v2::AppProfile* temp = app_profile_;
  app_profile_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::AppProfile* CreateAppProfileRequest::mutable_app_profile() {
  
  if (app_profile_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::AppProfile>(GetArenaNoVirtual());
    app_profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile)
  return app_profile_;
}
inline void CreateAppProfileRequest::set_allocated_app_profile(::google::bigtable::admin::v2::AppProfile* app_profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(app_profile_);
  }
  if (app_profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_profile, submessage_arena);
    }
    
  } else {
    
  }
  app_profile_ = app_profile;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.CreateAppProfileRequest.app_profile)
}

// bool ignore_warnings = 4;
inline void CreateAppProfileRequest::clear_ignore_warnings() {
  ignore_warnings_ = false;
}
inline bool CreateAppProfileRequest::ignore_warnings() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.CreateAppProfileRequest.ignore_warnings)
  return ignore_warnings_;
}
inline void CreateAppProfileRequest::set_ignore_warnings(bool value) {
  
  ignore_warnings_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.CreateAppProfileRequest.ignore_warnings)
}

// -------------------------------------------------------------------

// GetAppProfileRequest

// string name = 1;
inline void GetAppProfileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetAppProfileRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.GetAppProfileRequest.name)
  return name_.GetNoArena();
}
inline void GetAppProfileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.GetAppProfileRequest.name)
}
#if LANG_CXX11
inline void GetAppProfileRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.GetAppProfileRequest.name)
}
#endif
inline void GetAppProfileRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.GetAppProfileRequest.name)
}
inline void GetAppProfileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.GetAppProfileRequest.name)
}
inline ::std::string* GetAppProfileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.GetAppProfileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetAppProfileRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.GetAppProfileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetAppProfileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.GetAppProfileRequest.name)
}

// -------------------------------------------------------------------

// ListAppProfilesRequest

// string parent = 1;
inline void ListAppProfilesRequest::clear_parent() {
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAppProfilesRequest::parent() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
  return parent_.GetNoArena();
}
inline void ListAppProfilesRequest::set_parent(const ::std::string& value) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
}
#if LANG_CXX11
inline void ListAppProfilesRequest::set_parent(::std::string&& value) {
  
  parent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
}
#endif
inline void ListAppProfilesRequest::set_parent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
}
inline void ListAppProfilesRequest::set_parent(const char* value, size_t size) {
  
  parent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
}
inline ::std::string* ListAppProfilesRequest::mutable_parent() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
  return parent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAppProfilesRequest::release_parent() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
  
  return parent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAppProfilesRequest::set_allocated_parent(::std::string* parent) {
  if (parent != NULL) {
    
  } else {
    
  }
  parent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListAppProfilesRequest.parent)
}

// string page_token = 2;
inline void ListAppProfilesRequest::clear_page_token() {
  page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAppProfilesRequest::page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
  return page_token_.GetNoArena();
}
inline void ListAppProfilesRequest::set_page_token(const ::std::string& value) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
}
#if LANG_CXX11
inline void ListAppProfilesRequest::set_page_token(::std::string&& value) {
  
  page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
}
#endif
inline void ListAppProfilesRequest::set_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
}
inline void ListAppProfilesRequest::set_page_token(const char* value, size_t size) {
  
  page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
}
inline ::std::string* ListAppProfilesRequest::mutable_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
  return page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAppProfilesRequest::release_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
  
  return page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAppProfilesRequest::set_allocated_page_token(::std::string* page_token) {
  if (page_token != NULL) {
    
  } else {
    
  }
  page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListAppProfilesRequest.page_token)
}

// -------------------------------------------------------------------

// ListAppProfilesResponse

// repeated .google.bigtable.admin.v2.AppProfile app_profiles = 1;
inline int ListAppProfilesResponse::app_profiles_size() const {
  return app_profiles_.size();
}
inline ::google::bigtable::admin::v2::AppProfile* ListAppProfilesResponse::mutable_app_profiles(int index) {
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListAppProfilesResponse.app_profiles)
  return app_profiles_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::AppProfile >*
ListAppProfilesResponse::mutable_app_profiles() {
  // @@protoc_insertion_point(field_mutable_list:google.bigtable.admin.v2.ListAppProfilesResponse.app_profiles)
  return &app_profiles_;
}
inline const ::google::bigtable::admin::v2::AppProfile& ListAppProfilesResponse::app_profiles(int index) const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListAppProfilesResponse.app_profiles)
  return app_profiles_.Get(index);
}
inline ::google::bigtable::admin::v2::AppProfile* ListAppProfilesResponse::add_app_profiles() {
  // @@protoc_insertion_point(field_add:google.bigtable.admin.v2.ListAppProfilesResponse.app_profiles)
  return app_profiles_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::google::bigtable::admin::v2::AppProfile >&
ListAppProfilesResponse::app_profiles() const {
  // @@protoc_insertion_point(field_list:google.bigtable.admin.v2.ListAppProfilesResponse.app_profiles)
  return app_profiles_;
}

// string next_page_token = 2;
inline void ListAppProfilesResponse::clear_next_page_token() {
  next_page_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ListAppProfilesResponse::next_page_token() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
  return next_page_token_.GetNoArena();
}
inline void ListAppProfilesResponse::set_next_page_token(const ::std::string& value) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
}
#if LANG_CXX11
inline void ListAppProfilesResponse::set_next_page_token(::std::string&& value) {
  
  next_page_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
}
#endif
inline void ListAppProfilesResponse::set_next_page_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
}
inline void ListAppProfilesResponse::set_next_page_token(const char* value, size_t size) {
  
  next_page_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
}
inline ::std::string* ListAppProfilesResponse::mutable_next_page_token() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
  return next_page_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ListAppProfilesResponse::release_next_page_token() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
  
  return next_page_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ListAppProfilesResponse::set_allocated_next_page_token(::std::string* next_page_token) {
  if (next_page_token != NULL) {
    
  } else {
    
  }
  next_page_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), next_page_token);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.ListAppProfilesResponse.next_page_token)
}

// -------------------------------------------------------------------

// UpdateAppProfileRequest

// .google.bigtable.admin.v2.AppProfile app_profile = 1;
inline bool UpdateAppProfileRequest::has_app_profile() const {
  return this != internal_default_instance() && app_profile_ != NULL;
}
inline const ::google::bigtable::admin::v2::AppProfile& UpdateAppProfileRequest::_internal_app_profile() const {
  return *app_profile_;
}
inline const ::google::bigtable::admin::v2::AppProfile& UpdateAppProfileRequest::app_profile() const {
  const ::google::bigtable::admin::v2::AppProfile* p = app_profile_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateAppProfileRequest.app_profile)
  return p != NULL ? *p : *reinterpret_cast<const ::google::bigtable::admin::v2::AppProfile*>(
      &::google::bigtable::admin::v2::_AppProfile_default_instance_);
}
inline ::google::bigtable::admin::v2::AppProfile* UpdateAppProfileRequest::release_app_profile() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateAppProfileRequest.app_profile)
  
  ::google::bigtable::admin::v2::AppProfile* temp = app_profile_;
  app_profile_ = NULL;
  return temp;
}
inline ::google::bigtable::admin::v2::AppProfile* UpdateAppProfileRequest::mutable_app_profile() {
  
  if (app_profile_ == NULL) {
    auto* p = CreateMaybeMessage<::google::bigtable::admin::v2::AppProfile>(GetArenaNoVirtual());
    app_profile_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateAppProfileRequest.app_profile)
  return app_profile_;
}
inline void UpdateAppProfileRequest::set_allocated_app_profile(::google::bigtable::admin::v2::AppProfile* app_profile) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(app_profile_);
  }
  if (app_profile) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      app_profile = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app_profile, submessage_arena);
    }
    
  } else {
    
  }
  app_profile_ = app_profile;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateAppProfileRequest.app_profile)
}

// .google.protobuf.FieldMask update_mask = 2;
inline bool UpdateAppProfileRequest::has_update_mask() const {
  return this != internal_default_instance() && update_mask_ != NULL;
}
inline const ::google::protobuf::FieldMask& UpdateAppProfileRequest::_internal_update_mask() const {
  return *update_mask_;
}
inline const ::google::protobuf::FieldMask& UpdateAppProfileRequest::update_mask() const {
  const ::google::protobuf::FieldMask* p = update_mask_;
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateAppProfileRequest.update_mask)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::FieldMask*>(
      &::google::protobuf::_FieldMask_default_instance_);
}
inline ::google::protobuf::FieldMask* UpdateAppProfileRequest::release_update_mask() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.UpdateAppProfileRequest.update_mask)
  
  ::google::protobuf::FieldMask* temp = update_mask_;
  update_mask_ = NULL;
  return temp;
}
inline ::google::protobuf::FieldMask* UpdateAppProfileRequest::mutable_update_mask() {
  
  if (update_mask_ == NULL) {
    auto* p = CreateMaybeMessage<::google::protobuf::FieldMask>(GetArenaNoVirtual());
    update_mask_ = p;
  }
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.UpdateAppProfileRequest.update_mask)
  return update_mask_;
}
inline void UpdateAppProfileRequest::set_allocated_update_mask(::google::protobuf::FieldMask* update_mask) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(update_mask_);
  }
  if (update_mask) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      update_mask = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, update_mask, submessage_arena);
    }
    
  } else {
    
  }
  update_mask_ = update_mask;
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.UpdateAppProfileRequest.update_mask)
}

// bool ignore_warnings = 3;
inline void UpdateAppProfileRequest::clear_ignore_warnings() {
  ignore_warnings_ = false;
}
inline bool UpdateAppProfileRequest::ignore_warnings() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.UpdateAppProfileRequest.ignore_warnings)
  return ignore_warnings_;
}
inline void UpdateAppProfileRequest::set_ignore_warnings(bool value) {
  
  ignore_warnings_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.UpdateAppProfileRequest.ignore_warnings)
}

// -------------------------------------------------------------------

// DeleteAppProfileRequest

// string name = 1;
inline void DeleteAppProfileRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteAppProfileRequest::name() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
  return name_.GetNoArena();
}
inline void DeleteAppProfileRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
}
#if LANG_CXX11
inline void DeleteAppProfileRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
}
#endif
inline void DeleteAppProfileRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
}
inline void DeleteAppProfileRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
}
inline ::std::string* DeleteAppProfileRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteAppProfileRequest::release_name() {
  // @@protoc_insertion_point(field_release:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteAppProfileRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.bigtable.admin.v2.DeleteAppProfileRequest.name)
}

// bool ignore_warnings = 2;
inline void DeleteAppProfileRequest::clear_ignore_warnings() {
  ignore_warnings_ = false;
}
inline bool DeleteAppProfileRequest::ignore_warnings() const {
  // @@protoc_insertion_point(field_get:google.bigtable.admin.v2.DeleteAppProfileRequest.ignore_warnings)
  return ignore_warnings_;
}
inline void DeleteAppProfileRequest::set_ignore_warnings(bool value) {
  
  ignore_warnings_ = value;
  // @@protoc_insertion_point(field_set:google.bigtable.admin.v2.DeleteAppProfileRequest.ignore_warnings)
}

// -------------------------------------------------------------------

// UpdateAppProfileMetadata

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v2
}  // namespace admin
}  // namespace bigtable
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_google_2fbigtable_2fadmin_2fv2_2fbigtable_5finstance_5fadmin_2eproto
