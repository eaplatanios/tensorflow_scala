/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_platanios_tensorflow_jni_generated_tensors_Linalg__ */

#ifndef _Included_org_platanios_tensorflow_jni_generated_tensors_Linalg__
#define _Included_org_platanios_tensorflow_jni_generated_tensors_Linalg__
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Linalg__
 * Method:    logMatrixDeterminant
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Linalg_00024_logMatrixDeterminant
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Linalg__
 * Method:    matrixDeterminant
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Linalg_00024_matrixDeterminant
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Linalg__
 * Method:    matrixInverse
 * Signature: (JJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Linalg_00024_matrixInverse
  (JNIEnv *, jobject, jlong, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Linalg__
 * Method:    matrixSolve
 * Signature: (JJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Linalg_00024_matrixSolve
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Linalg__
 * Method:    matrixSolveLs
 * Signature: (JJJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Linalg_00024_matrixSolveLs
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Linalg__
 * Method:    matrixTriangularSolve
 * Signature: (JJJZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Linalg_00024_matrixTriangularSolve
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean, jboolean);

#ifdef __cplusplus
}
#endif
#endif
