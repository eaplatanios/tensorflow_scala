/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_platanios_tensorflow_jni_generated_tensors_NN__ */

#ifndef _Included_org_platanios_tensorflow_jni_generated_tensors_NN__
#define _Included_org_platanios_tensorflow_jni_generated_tensors_NN__
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    biasAdd
 * Signature: (JJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_biasAdd
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    relu
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_relu
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    relu6
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_relu6
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    elu
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_elu
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    selu
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_selu
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    softplus
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_softplus
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    softsign
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_softsign
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    softmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_softmax
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    logSoftmax
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_logSoftmax
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    l2Loss
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_l2Loss
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    softmaxCrossEntropyWithLogits
 * Signature: (JJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_softmaxCrossEntropyWithLogits
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    sparseSoftmaxCrossEntropyWithLogits
 * Signature: (JJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_sparseSoftmaxCrossEntropyWithLogits
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    topKV2
 * Signature: (JJJZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_topKV2
  (JNIEnv *, jobject, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    inTopKV2
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_inTopKV2
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    avgPool
 * Signature: (JJ[J[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_avgPool
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    avgPool3D
 * Signature: (JJ[J[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_avgPool3D
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    maxPool
 * Signature: (JJ[J[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_maxPool
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    maxPoolGrad
 * Signature: (JJJJ[J[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_maxPoolGrad
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlongArray, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    maxPoolGradGrad
 * Signature: (JJJJ[J[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_maxPoolGradGrad
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlongArray, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    maxPool3D
 * Signature: (JJ[J[J[B[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_maxPool3D
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jlongArray, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    maxPoolWithArgmax
 * Signature: (JJ[J[J[BI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_maxPoolWithArgmax
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jlongArray, jbyteArray, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    fractionalAvgPool
 * Signature: (JJ[FZZZJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_fractionalAvgPool
  (JNIEnv *, jobject, jlong, jlong, jfloatArray, jboolean, jboolean, jboolean, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    fractionalMaxPool
 * Signature: (JJ[FZZZJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_fractionalMaxPool
  (JNIEnv *, jobject, jlong, jlong, jfloatArray, jboolean, jboolean, jboolean, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    conv2D
 * Signature: (JJJ[J[BZ[B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_conv2D
  (JNIEnv *, jobject, jlong, jlong, jlong, jlongArray, jbyteArray, jboolean, jbyteArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    conv2DBackpropInput
 * Signature: (JJJJ[J[BZ[B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_conv2DBackpropInput
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlongArray, jbyteArray, jboolean, jbyteArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    conv2DBackpropFilter
 * Signature: (JJJJ[J[BZ[B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_conv2DBackpropFilter
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlongArray, jbyteArray, jboolean, jbyteArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    fusedResizeAndPadConv2D
 * Signature: (JJJJJ[B[J[BZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_fusedResizeAndPadConv2D
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jbyteArray, jlongArray, jbyteArray, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    fusedPadConv2D
 * Signature: (JJJJ[B[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_fusedPadConv2D
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jbyteArray, jlongArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    depthwiseConv2dNative
 * Signature: (JJJ[J[B[B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_depthwiseConv2dNative
  (JNIEnv *, jobject, jlong, jlong, jlong, jlongArray, jbyteArray, jbyteArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    conv3D
 * Signature: (JJJ[J[B[B[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_conv3D
  (JNIEnv *, jobject, jlong, jlong, jlong, jlongArray, jbyteArray, jbyteArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    dilation2D
 * Signature: (JJJ[J[J[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_dilation2D
  (JNIEnv *, jobject, jlong, jlong, jlong, jlongArray, jlongArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    lRN
 * Signature: (JJJFFF)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_lRN
  (JNIEnv *, jobject, jlong, jlong, jlong, jfloat, jfloat, jfloat);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    batchNormWithGlobalNormalization
 * Signature: (JJJJJJFZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_batchNormWithGlobalNormalization
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jfloat, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    fusedBatchNorm
 * Signature: (JJJJJJF[BZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_fusedBatchNorm
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jfloat, jbyteArray, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedBiasAdd
 * Signature: (JJJJJJJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedBiasAdd
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedRelu
 * Signature: (JJJJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedRelu
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedRelu6
 * Signature: (JJJJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedRelu6
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedReluX
 * Signature: (JJJJJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedReluX
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedAvgPool
 * Signature: (JJJJ[J[J[B)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedAvgPool
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlongArray, jlongArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedMaxPool
 * Signature: (JJJJ[J[J[B)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedMaxPool
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlongArray, jlongArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedConv2D
 * Signature: (JJJJJJJ[J[BI[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedConv2D
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlongArray, jbyteArray, jint, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_NN__
 * Method:    quantizedBatchNormWithGlobalNormalization
 * Signature: (JJJJJJJJJJJJJJJJIFZ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_NN_00024_quantizedBatchNormWithGlobalNormalization
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jint, jfloat, jboolean);

#ifdef __cplusplus
}
#endif
#endif
