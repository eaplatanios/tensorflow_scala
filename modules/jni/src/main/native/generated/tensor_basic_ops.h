/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_platanios_tensorflow_jni_generated_tensors_Basic__ */

#ifndef _Included_org_platanios_tensorflow_jni_generated_tensors_Basic__
#define _Included_org_platanios_tensorflow_jni_generated_tensors_Basic__
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    zerosLike
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_zerosLike
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    onesLike
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_onesLike
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    fill
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_fill
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    rank
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_rank
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    size
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_size
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    shape
 * Signature: (JJI)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_shape
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    expandDims
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_expandDims
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    squeeze
 * Signature: (JJ[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_squeeze
  (JNIEnv *, jobject, jlong, jlong, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    pack
 * Signature: (J[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_pack
  (JNIEnv *, jobject, jlong, jlongArray, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    parallelConcat
 * Signature: (J[J[J)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_parallelConcat
  (JNIEnv *, jobject, jlong, jlongArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    unpack
 * Signature: (JJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_unpack
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    concatV2
 * Signature: (J[JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_concatV2
  (JNIEnv *, jobject, jlong, jlongArray, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    concatOffset
 * Signature: (JJ[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_concatOffset
  (JNIEnv *, jobject, jlong, jlong, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    split
 * Signature: (JJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_split
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    splitV
 * Signature: (JJJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_splitV
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    tile
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_tile
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    pad
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_pad
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    padV2
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_padV2
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    mirrorPad
 * Signature: (JJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_mirrorPad
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    reshape
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_reshape
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    transpose
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_transpose
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    conjugateTranspose
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_conjugateTranspose
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    invertPermutation
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_invertPermutation
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    reverseV2
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_reverseV2
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    reverseSequence
 * Signature: (JJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_reverseSequence
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    spaceToBatchND
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_spaceToBatchND
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    batchToSpaceND
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_batchToSpaceND
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    spaceToDepth
 * Signature: (JJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_spaceToDepth
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    depthToSpace
 * Signature: (JJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_depthToSpace
  (JNIEnv *, jobject, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    where
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_where
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    unique
 * Signature: (JJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_unique
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    uniqueWithCounts
 * Signature: (JJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_uniqueWithCounts
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    listDiff
 * Signature: (JJJI)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_listDiff
  (JNIEnv *, jobject, jlong, jlong, jlong, jint);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    gatherV2
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_gatherV2
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    gatherNd
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_gatherNd
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    scatterNd
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_scatterNd
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    slice
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_slice
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    stridedSlice
 * Signature: (JJJJJJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_stridedSlice
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    checkNumerics
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_checkNumerics
  (JNIEnv *, jobject, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    editDistance
 * Signature: (JJJJJJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_editDistance
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    oneHot
 * Signature: (JJJJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_oneHot
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    broadcastArgs
 * Signature: (JJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_broadcastArgs
  (JNIEnv *, jobject, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    stopGradient
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_stopGradient
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    preventGradient
 * Signature: (JJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_preventGradient
  (JNIEnv *, jobject, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    identity
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_identity
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    identityN
 * Signature: (JJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_identityN
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    scatterNdNonAliasingAdd
 * Signature: (JJJJ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_scatterNdNonAliasingAdd
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    quantizeAndDequantizeV3
 * Signature: (JJJJJZZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_quantizeAndDequantizeV3
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jboolean, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    quantizeV2
 * Signature: (JJJJI[B[B)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_quantizeV2
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jint, jbyteArray, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    dequantize
 * Signature: (JJJJ[B)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_dequantize
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jbyteArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    quantizedConcat
 * Signature: (JJ[J[J[J)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_quantizedConcat
  (JNIEnv *, jobject, jlong, jlong, jlongArray, jlongArray, jlongArray);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    quantizedReshape
 * Signature: (JJJJJ)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_quantizedReshape
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    quantizedInstanceNorm
 * Signature: (JJJJZFFFF)[J
 */
JNIEXPORT jlongArray JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_quantizedInstanceNorm
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jboolean, jfloat, jfloat, jfloat, jfloat);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    fakeQuantWithMinMaxArgs
 * Signature: (JJFFJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_fakeQuantWithMinMaxArgs
  (JNIEnv *, jobject, jlong, jlong, jfloat, jfloat, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    fakeQuantWithMinMaxVars
 * Signature: (JJJJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_fakeQuantWithMinMaxVars
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jboolean);

/*
 * Class:     org_platanios_tensorflow_jni_generated_tensors_Basic__
 * Method:    fakeQuantWithMinMaxVarsPerChannel
 * Signature: (JJJJJZ)J
 */
JNIEXPORT jlong JNICALL Java_org_platanios_tensorflow_jni_generated_tensors_Basic_00024_fakeQuantWithMinMaxVarsPerChannel
  (JNIEnv *, jobject, jlong, jlong, jlong, jlong, jlong, jboolean);

#ifdef __cplusplus
}
#endif
#endif
